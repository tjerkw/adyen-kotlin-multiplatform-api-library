/**
 * Configuration API
 *
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.service.balanceplatform

import com.adyen.model.balanceplatform.BalanceAccount
import com.adyen.model.balanceplatform.BalanceAccountInfo
import com.adyen.model.balanceplatform.BalanceAccountUpdateRequest
import com.adyen.model.balanceplatform.BalanceSweepConfigurationsResponse
import com.adyen.model.balanceplatform.CreateSweepConfigurationV2
import com.adyen.model.balanceplatform.PaginatedPaymentInstrumentsResponse
import com.adyen.model.balanceplatform.RestServiceError
import com.adyen.model.balanceplatform.SweepConfigurationV2
import com.adyen.model.balanceplatform.UpdateSweepConfigurationV2

import com.adyen.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class BalanceAccountsApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * Delete a sweep
     * Deletes a sweep for a balance account.
     * @param balanceAccountId The unique identifier of the balance account.
     * @param sweepId The unique identifier of the sweep.
     * @return void
     */
    open suspend fun deleteBalanceAccountsBalanceAccountIdSweepsSweepId(balanceAccountId: kotlin.String, sweepId: kotlin.String): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}".replace("{" + "balanceAccountId" + "}", "$balanceAccountId").replace("{" + "sweepId" + "}", "$sweepId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get all sweeps for a balance account
     * Returns a list of the sweeps configured for a balance account.  To fetch multiple pages, use the query parameters. For example, to limit the page to 5 sweeps and to skip the first 10, use &#x60;/balanceAccounts/{balanceAccountId}/sweeps?limit&#x3D;5&amp;offset&#x3D;10&#x60;.
     * @param balanceAccountId The unique identifier of the balance account.
     * @param offset The number of items that you want to skip. (optional)
     * @param limit The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page. (optional)
     * @return BalanceSweepConfigurationsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getBalanceAccountsBalanceAccountIdSweeps(balanceAccountId: kotlin.String, offset: kotlin.Int? = null, limit: kotlin.Int? = null): HttpResponse<BalanceSweepConfigurationsResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/balanceAccounts/{balanceAccountId}/sweeps".replace("{" + "balanceAccountId" + "}", "$balanceAccountId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get a sweep
     * Returns a sweep.
     * @param balanceAccountId The unique identifier of the balance account.
     * @param sweepId The unique identifier of the sweep.
     * @return SweepConfigurationV2
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getBalanceAccountsBalanceAccountIdSweepsSweepId(balanceAccountId: kotlin.String, sweepId: kotlin.String): HttpResponse<SweepConfigurationV2> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}".replace("{" + "balanceAccountId" + "}", "$balanceAccountId").replace("{" + "sweepId" + "}", "$sweepId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get a balance account
     * Returns a balance account and its balances for the default currency and other currencies with a non-zero balance.
     * @param id The unique identifier of the balance account.
     * @return BalanceAccount
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getBalanceAccountsId(id: kotlin.String): HttpResponse<BalanceAccount> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/balanceAccounts/{id}".replace("{" + "id" + "}", "$id"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get all payment instruments for a balance account
     * Returns a paginated list of the payment instruments associated with a balance account.   To fetch multiple pages, use the query parameters.For example, to limit the page to 3 payment instruments and to skip the first 6, use &#x60;/balanceAccounts/{id}/paymentInstruments?limit&#x3D;3&amp;offset&#x3D;6&#x60;.
     * @param id The unique identifier of the balance account.
     * @param offset The number of items that you want to skip. (optional)
     * @param limit The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page. (optional)
     * @return PaginatedPaymentInstrumentsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getBalanceAccountsIdPaymentInstruments(id: kotlin.String, offset: kotlin.Int? = null, limit: kotlin.Int? = null): HttpResponse<PaginatedPaymentInstrumentsResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/balanceAccounts/{id}/paymentInstruments".replace("{" + "id" + "}", "$id"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Update a sweep
     * Updates a sweep. When updating a sweep resource, note that if a request parameter is not provided, the parameter is left unchanged.
     * @param balanceAccountId The unique identifier of the balance account.
     * @param sweepId The unique identifier of the sweep.
     * @param updateSweepConfigurationV2  (optional)
     * @return SweepConfigurationV2
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun patchBalanceAccountsBalanceAccountIdSweepsSweepId(balanceAccountId: kotlin.String, sweepId: kotlin.String, updateSweepConfigurationV2: UpdateSweepConfigurationV2? = null): HttpResponse<SweepConfigurationV2> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = updateSweepConfigurationV2

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PATCH,
            "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}".replace("{" + "balanceAccountId" + "}", "$balanceAccountId").replace("{" + "sweepId" + "}", "$sweepId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Update a balance account
     * Updates a balance account.
     * @param id The unique identifier of the balance account.
     * @param balanceAccountUpdateRequest  (optional)
     * @return BalanceAccount
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun patchBalanceAccountsId(id: kotlin.String, balanceAccountUpdateRequest: BalanceAccountUpdateRequest? = null): HttpResponse<BalanceAccount> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = balanceAccountUpdateRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PATCH,
            "/balanceAccounts/{id}".replace("{" + "id" + "}", "$id"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Create a balance account
     * Creates a balance account that holds the funds of the associated account holder.
     * @param balanceAccountInfo  (optional)
     * @return BalanceAccount
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postBalanceAccounts(balanceAccountInfo: BalanceAccountInfo? = null): HttpResponse<BalanceAccount> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = balanceAccountInfo

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/balanceAccounts",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Create a sweep
     * Creates a sweep that results in moving funds from or to a balance account.  A sweep pulls in or pushes out funds based on a defined schedule, amount, currency, and a source or a destination.
     * @param balanceAccountId The unique identifier of the balance account.
     * @param createSweepConfigurationV2  (optional)
     * @return SweepConfigurationV2
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postBalanceAccountsBalanceAccountIdSweeps(balanceAccountId: kotlin.String, createSweepConfigurationV2: CreateSweepConfigurationV2? = null): HttpResponse<SweepConfigurationV2> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = createSweepConfigurationV2

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/balanceAccounts/{balanceAccountId}/sweeps".replace("{" + "balanceAccountId" + "}", "$balanceAccountId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



}
