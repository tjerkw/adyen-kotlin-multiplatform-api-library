/**
 * POS Terminal Management API
 *
 * This API provides endpoints for managing your point-of-sale (POS) payment terminals. You can use the API to obtain information about a specific terminal, retrieve overviews of your terminals and stores, and assign terminals to a merchant account or store.  For more information, refer to [Assign terminals](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api).  ## Authentication Each request to the Terminal Management API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Terminal Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://postfmapi-test.adyen.com/postfmapi/terminal/v1/getTerminalsUnderAccount ``` When using versioned endpoints, Boolean response values are returned in string format: `\"true\"` or `\"false\"`. If you omit the version from the endpoint URL, Boolean response values are returned like this: `true` or `false`.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.service.posterminalmanagement

import com.adyen.model.posterminalmanagement.AssignTerminalsRequest
import com.adyen.model.posterminalmanagement.AssignTerminalsResponse
import com.adyen.model.posterminalmanagement.FindTerminalRequest
import com.adyen.model.posterminalmanagement.FindTerminalResponse
import com.adyen.model.posterminalmanagement.GetStoresUnderAccountRequest
import com.adyen.model.posterminalmanagement.GetStoresUnderAccountResponse
import com.adyen.model.posterminalmanagement.GetTerminalDetailsRequest
import com.adyen.model.posterminalmanagement.GetTerminalDetailsResponse
import com.adyen.model.posterminalmanagement.GetTerminalsUnderAccountRequest
import com.adyen.model.posterminalmanagement.GetTerminalsUnderAccountResponse
import com.adyen.model.posterminalmanagement.ServiceError

import com.adyen.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class GeneralApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * Assign terminals
     * Assigns one or more payment terminals to a merchant account or a store. You can also use this endpoint to reassign terminals between merchant accounts or stores, and to unassign a terminal and return it to company inventory.
     * @param assignTerminalsRequest  (optional)
     * @return AssignTerminalsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postAssignTerminals(assignTerminalsRequest: AssignTerminalsRequest? = null): HttpResponse<AssignTerminalsResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = assignTerminalsRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/assignTerminals",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Get the account or store of a terminal
     * Returns the company account, merchant account, or store that a payment terminal is assigned to.
     * @param findTerminalRequest  (optional)
     * @return FindTerminalResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postFindTerminal(findTerminalRequest: FindTerminalRequest? = null): HttpResponse<FindTerminalResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = findTerminalRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/findTerminal",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Get the stores of an account
     * Returns a list of stores associated with a company account or a merchant account, including the status of each store.
     * @param getStoresUnderAccountRequest  (optional)
     * @return GetStoresUnderAccountResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postGetStoresUnderAccount(getStoresUnderAccountRequest: GetStoresUnderAccountRequest? = null): HttpResponse<GetStoresUnderAccountResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = getStoresUnderAccountRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/getStoresUnderAccount",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Get the details of a terminal
     * Returns the details of a payment terminal, including where the terminal is assigned to. The response returns the same details that are provided in the terminal list in your Customer Area and in the Terminal Fleet report.
     * @param getTerminalDetailsRequest  (optional)
     * @return GetTerminalDetailsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postGetTerminalDetails(getTerminalDetailsRequest: GetTerminalDetailsRequest? = null): HttpResponse<GetTerminalDetailsResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = getTerminalDetailsRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/getTerminalDetails",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Get the list of terminals
     * Returns a list of payment terminals associated with a company account, merchant account, or store. The response shows whether the terminals are in the inventory, or in-store (ready for boarding or already boarded).
     * @param getTerminalsUnderAccountRequest  (optional)
     * @return GetTerminalsUnderAccountResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postGetTerminalsUnderAccount(getTerminalsUnderAccountRequest: GetTerminalsUnderAccountRequest? = null): HttpResponse<GetTerminalsUnderAccountResponse> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = getTerminalsUnderAccountRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/getTerminalsUnderAccount",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



}
