/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.service.management

import com.adyen.model.management.RestServiceError
import com.adyen.model.management.SplitConfiguration
import com.adyen.model.management.SplitConfigurationList
import com.adyen.model.management.SplitConfigurationRule
import com.adyen.model.management.UpdateSplitConfigurationLogicRequest
import com.adyen.model.management.UpdateSplitConfigurationRequest
import com.adyen.model.management.UpdateSplitConfigurationRuleRequest

import com.adyen.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class SplitConfigurationMerchantLevelApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * Delete a split configuration
     * Deletes the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId: kotlin.String, splitConfigurationId: kotlin.String): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Delete a split configuration rule
     * Deletes the split configuration rule specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @param ruleId 
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId(merchantId: kotlin.String, splitConfigurationId: kotlin.String, ruleId: kotlin.String): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId").replace("{" + "ruleId" + "}", "$ruleId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get a list of split configurations
     * Returns the list of split configurations for the merchant account.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @return SplitConfigurationList
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getMerchantsMerchantIdSplitConfigurations(merchantId: kotlin.String): HttpResponse<SplitConfigurationList> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/merchants/{merchantId}/splitConfigurations".replace("{" + "merchantId" + "}", "$merchantId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Get a split configuration
     * Returns the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId: kotlin.String, splitConfigurationId: kotlin.String): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Update split configuration description
     * Changes the description of the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @param updateSplitConfigurationRequest  (optional)
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId: kotlin.String, splitConfigurationId: kotlin.String, updateSplitConfigurationRequest: UpdateSplitConfigurationRequest? = null): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = updateSplitConfigurationRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PATCH,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Update split conditions
     * Changes the conditions of the split configuration rule specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The identifier of the split configuration.
     * @param ruleId The unique identifier of the split configuration rule.
     * @param updateSplitConfigurationRuleRequest  (optional)
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId(merchantId: kotlin.String, splitConfigurationId: kotlin.String, ruleId: kotlin.String, updateSplitConfigurationRuleRequest: UpdateSplitConfigurationRuleRequest? = null): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = updateSplitConfigurationRuleRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PATCH,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId").replace("{" + "ruleId" + "}", "$ruleId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Update the split logic
     * Changes the split logic specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @param ruleId The unique identifier of the split configuration rule.
     * @param splitLogicId The unique identifier of the split configuration split.
     * @param updateSplitConfigurationLogicRequest  (optional)
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId(merchantId: kotlin.String, splitConfigurationId: kotlin.String, ruleId: kotlin.String, splitLogicId: kotlin.String, updateSplitConfigurationLogicRequest: UpdateSplitConfigurationLogicRequest? = null): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = updateSplitConfigurationLogicRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PATCH,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}/splitLogic/{splitLogicId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId").replace("{" + "ruleId" + "}", "$ruleId").replace("{" + "splitLogicId" + "}", "$splitLogicId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Create a split configuration
     * Creates a split configuration for the merchant account specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfiguration  (optional)
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postMerchantsMerchantIdSplitConfigurations(merchantId: kotlin.String, splitConfiguration: SplitConfiguration? = null): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = splitConfiguration

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/merchants/{merchantId}/splitConfigurations".replace("{" + "merchantId" + "}", "$merchantId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * Create a rule
     * Creates a rule in the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param merchantId The unique identifier of the merchant account.
     * @param splitConfigurationId The unique identifier of the split configuration.
     * @param splitConfigurationRule  (optional)
     * @return SplitConfiguration
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId: kotlin.String, splitConfigurationId: kotlin.String, splitConfigurationRule: SplitConfigurationRule? = null): HttpResponse<SplitConfiguration> {

        val localVariableAuthNames = listOf<String>("ApiKeyAuth", "BasicAuth")

        val localVariableBody = splitConfigurationRule

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}".replace("{" + "merchantId" + "}", "$merchantId").replace("{" + "splitConfigurationId" + "}", "$splitConfigurationId"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



}
