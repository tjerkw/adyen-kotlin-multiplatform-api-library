/**
 * Legal Entity Management API
 *
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v3/legalEntities ``` >If you are using hosted onboarding, [only use v2](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-01-legal-entity-management-api-3) for your API requests.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.legalentitymanagement

import com.adyen.model.legalentitymanagement.DocumentPage

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param active Identifies whether the document is active and used for checks.
 * @param description Your description for the document.
 * @param fileName Document name.
 * @param id The unique identifier of the resource.
 * @param modificationDate The modification date of the document.
 * @param pages List of document pages
 * @param type Type of document, used when providing an ID number or uploading a document.
 */
@Serializable
data class DocumentReference (

    /* Identifies whether the document is active and used for checks. */
    @SerialName(value = "active") val active: kotlin.Boolean? = null,

    /* Your description for the document. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* Document name. */
    @SerialName(value = "fileName") val fileName: kotlin.String? = null,

    /* The unique identifier of the resource. */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* The modification date of the document. */
    @SerialName(value = "modificationDate") val modificationDate: kotlin.String? = null,

    /* List of document pages */
    @SerialName(value = "pages") val pages: kotlin.collections.List<DocumentPage>? = null,

    /* Type of document, used when providing an ID number or uploading a document. */
    @SerialName(value = "type") val type: kotlin.String? = null

)

