/**
 * POS Terminal Management API
 *
 * This API provides endpoints for managing your point-of-sale (POS) payment terminals. You can use the API to obtain information about a specific terminal, retrieve overviews of your terminals and stores, and assign terminals to a merchant account or store.  For more information, refer to [Assign terminals](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api).  ## Authentication Each request to the Terminal Management API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Terminal Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://postfmapi-test.adyen.com/postfmapi/terminal/v1/getTerminalsUnderAccount ``` When using versioned endpoints, Boolean response values are returned in string format: `\"true\"` or `\"false\"`. If you omit the version from the endpoint URL, Boolean response values are returned like this: `true` or `false`.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.posterminalmanagement

import com.adyen.model.posterminalmanagement.Store

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param companyAccount The company account that the terminal is associated with. If this is the only account level shown in the response, the terminal is assigned to the inventory of the company account.
 * @param terminal The unique terminal ID.
 * @param bluetoothIp The Bluetooth IP address of the terminal.
 * @param bluetoothMac The Bluetooth MAC address of the terminal.
 * @param country The country where the terminal is used.
 * @param deviceModel The model name of the terminal.
 * @param dhcpEnabled Indicates whether assigning IP addresses through a DHCP server is enabled on the terminal.
 * @param displayLabel The label shown on the status bar of the display. This label (if any) is specified in your Customer Area.
 * @param ethernetIp The terminal's IP address in your Ethernet network.
 * @param ethernetMac The terminal's MAC address in your Ethernet network.
 * @param firmwareVersion The software release currently in use on the terminal.
 * @param iccid The integrated circuit card identifier (ICCID) of the SIM card in the terminal.
 * @param lastActivityDateTime Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.
 * @param lastTransactionDateTime Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.
 * @param linkNegotiation The Ethernet link negotiation that the terminal uses:   - `auto`: Auto-negotiation  - `100full`: 100 Mbps full duplex
 * @param merchantAccount The merchant account that the terminal is associated with. If the response doesn't contain a `store` the terminal is assigned to this merchant account.
 * @param merchantInventory Boolean that indicates if the terminal is assigned to the merchant inventory. This is returned when the terminal is assigned to a merchant account.  - If **true**, this indicates that the terminal is in the merchant inventory. This also means that the terminal cannot be boarded.  - If **false**, this indicates that the terminal is assigned to the merchant account as an in-store terminal. This means that the terminal is ready to be boarded, or is already boarded.
 * @param permanentTerminalId The permanent terminal ID.
 * @param serialNumber The serial number of the terminal.
 * @param simStatus On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal: ACTIVE or INVENTORY.
 * @param store The store code of the store that the terminal is assigned to.
 * @param storeDetails 
 * @param terminalStatus The status of the terminal:   - `OnlineToday`, `OnlineLast1Day`, `OnlineLast2Days` etcetera to `OnlineLast7Days`: Indicates when in the past week the terminal was last online.   - `SwitchedOff`: Indicates it was more than a week ago that the terminal was last online.   - `ReAssignToInventoryPending`, `ReAssignToStorePending`, `ReAssignToMerchantInventoryPending`: Indicates the terminal is scheduled to be reassigned.
 * @param wifiIp The terminal's IP address in your Wi-Fi network.
 * @param wifiMac The terminal's MAC address in your Wi-Fi network.
 */
@Serializable
data class GetTerminalDetailsResponse (

    /* The company account that the terminal is associated with. If this is the only account level shown in the response, the terminal is assigned to the inventory of the company account. */
    @SerialName(value = "companyAccount") @Required val companyAccount: kotlin.String,

    /* The unique terminal ID. */
    @SerialName(value = "terminal") @Required val terminal: kotlin.String,

    /* The Bluetooth IP address of the terminal. */
    @SerialName(value = "bluetoothIp") val bluetoothIp: kotlin.String? = null,

    /* The Bluetooth MAC address of the terminal. */
    @SerialName(value = "bluetoothMac") val bluetoothMac: kotlin.String? = null,

    /* The country where the terminal is used. */
    @SerialName(value = "country") val country: kotlin.String? = null,

    /* The model name of the terminal. */
    @SerialName(value = "deviceModel") val deviceModel: kotlin.String? = null,

    /* Indicates whether assigning IP addresses through a DHCP server is enabled on the terminal. */
    @SerialName(value = "dhcpEnabled") val dhcpEnabled: kotlin.Boolean? = null,

    /* The label shown on the status bar of the display. This label (if any) is specified in your Customer Area. */
    @SerialName(value = "displayLabel") val displayLabel: kotlin.String? = null,

    /* The terminal's IP address in your Ethernet network. */
    @SerialName(value = "ethernetIp") val ethernetIp: kotlin.String? = null,

    /* The terminal's MAC address in your Ethernet network. */
    @SerialName(value = "ethernetMac") val ethernetMac: kotlin.String? = null,

    /* The software release currently in use on the terminal. */
    @SerialName(value = "firmwareVersion") val firmwareVersion: kotlin.String? = null,

    /* The integrated circuit card identifier (ICCID) of the SIM card in the terminal. */
    @SerialName(value = "iccid") val iccid: kotlin.String? = null,

    /* Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago. */
    @SerialName(value = "lastActivityDateTime") val lastActivityDateTime: kotlin.String? = null,

    /* Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago. */
    @SerialName(value = "lastTransactionDateTime") val lastTransactionDateTime: kotlin.String? = null,

    /* The Ethernet link negotiation that the terminal uses:   - `auto`: Auto-negotiation  - `100full`: 100 Mbps full duplex */
    @SerialName(value = "linkNegotiation") val linkNegotiation: kotlin.String? = null,

    /* The merchant account that the terminal is associated with. If the response doesn't contain a `store` the terminal is assigned to this merchant account. */
    @SerialName(value = "merchantAccount") val merchantAccount: kotlin.String? = null,

    /* Boolean that indicates if the terminal is assigned to the merchant inventory. This is returned when the terminal is assigned to a merchant account.  - If **true**, this indicates that the terminal is in the merchant inventory. This also means that the terminal cannot be boarded.  - If **false**, this indicates that the terminal is assigned to the merchant account as an in-store terminal. This means that the terminal is ready to be boarded, or is already boarded. */
    @SerialName(value = "merchantInventory") val merchantInventory: kotlin.Boolean? = null,

    /* The permanent terminal ID. */
    @SerialName(value = "permanentTerminalId") val permanentTerminalId: kotlin.String? = null,

    /* The serial number of the terminal. */
    @SerialName(value = "serialNumber") val serialNumber: kotlin.String? = null,

    /* On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal: ACTIVE or INVENTORY. */
    @SerialName(value = "simStatus") val simStatus: kotlin.String? = null,

    /* The store code of the store that the terminal is assigned to. */
    @SerialName(value = "store") val store: kotlin.String? = null,

    @SerialName(value = "storeDetails") val storeDetails: Store? = null,

    /* The status of the terminal:   - `OnlineToday`, `OnlineLast1Day`, `OnlineLast2Days` etcetera to `OnlineLast7Days`: Indicates when in the past week the terminal was last online.   - `SwitchedOff`: Indicates it was more than a week ago that the terminal was last online.   - `ReAssignToInventoryPending`, `ReAssignToStorePending`, `ReAssignToMerchantInventoryPending`: Indicates the terminal is scheduled to be reassigned. */
    @SerialName(value = "terminalStatus") val terminalStatus: GetTerminalDetailsResponse.TerminalStatus? = null,

    /* The terminal's IP address in your Wi-Fi network. */
    @SerialName(value = "wifiIp") val wifiIp: kotlin.String? = null,

    /* The terminal's MAC address in your Wi-Fi network. */
    @SerialName(value = "wifiMac") val wifiMac: kotlin.String? = null

) {

    /**
     * The status of the terminal:   - `OnlineToday`, `OnlineLast1Day`, `OnlineLast2Days` etcetera to `OnlineLast7Days`: Indicates when in the past week the terminal was last online.   - `SwitchedOff`: Indicates it was more than a week ago that the terminal was last online.   - `ReAssignToInventoryPending`, `ReAssignToStorePending`, `ReAssignToMerchantInventoryPending`: Indicates the terminal is scheduled to be reassigned.
     *
     * Values: OnlineLast1Day,OnlineLast2Days,OnlineLast3Days,OnlineLast4Days,OnlineLast5Days,OnlineLast6Days,OnlineLast7Days,OnlineToday,ReAssignToInventoryPending,ReAssignToMerchantInventoryPending,ReAssignToStorePending,SwitchedOff
     */
    @Serializable
    enum class TerminalStatus(val value: kotlin.String) {
        @SerialName(value = "OnlineLast1Day") OnlineLast1Day("OnlineLast1Day"),
        @SerialName(value = "OnlineLast2Days") OnlineLast2Days("OnlineLast2Days"),
        @SerialName(value = "OnlineLast3Days") OnlineLast3Days("OnlineLast3Days"),
        @SerialName(value = "OnlineLast4Days") OnlineLast4Days("OnlineLast4Days"),
        @SerialName(value = "OnlineLast5Days") OnlineLast5Days("OnlineLast5Days"),
        @SerialName(value = "OnlineLast6Days") OnlineLast6Days("OnlineLast6Days"),
        @SerialName(value = "OnlineLast7Days") OnlineLast7Days("OnlineLast7Days"),
        @SerialName(value = "OnlineToday") OnlineToday("OnlineToday"),
        @SerialName(value = "ReAssignToInventoryPending") ReAssignToInventoryPending("ReAssignToInventoryPending"),
        @SerialName(value = "ReAssignToMerchantInventoryPending") ReAssignToMerchantInventoryPending("ReAssignToMerchantInventoryPending"),
        @SerialName(value = "ReAssignToStorePending") ReAssignToStorePending("ReAssignToStorePending"),
        @SerialName(value = "SwitchedOff") SwitchedOff("SwitchedOff");
    }
}

