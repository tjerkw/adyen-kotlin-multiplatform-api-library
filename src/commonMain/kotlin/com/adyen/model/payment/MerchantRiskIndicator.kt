/**
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.payment

import com.adyen.model.payment.Amount

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param addressMatch Whether the chosen delivery address is identical to the billing address.
 * @param deliveryAddressIndicator Indicator regarding the delivery address. Allowed values: * `shipToBillingAddress` * `shipToVerifiedAddress` * `shipToNewAddress` * `shipToStore` * `digitalGoods` * `goodsNotShipped` * `other`
 * @param deliveryEmail The delivery email address (for digital goods).
 * @param deliveryEmailAddress For Electronic delivery, the email address to which the merchandise was delivered. Maximum length: 254 characters.
 * @param deliveryTimeframe The estimated delivery time for the shopper to receive the goods. Allowed values: * `electronicDelivery` * `sameDayShipping` * `overnightShipping` * `twoOrMoreDaysShipping`
 * @param giftCardAmount 
 * @param giftCardCount For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased.
 * @param giftCardCurr For prepaid or gift card purchase, [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) three-digit currency code of the gift card, other than those listed in Table A.5 of the EMVCo 3D Secure Protocol and Core Functions Specification.
 * @param preOrderDate For pre-order purchases, the expected date this product will be available to the shopper.
 * @param preOrderPurchase Indicator for whether this transaction is for pre-ordering a product.
 * @param preOrderPurchaseInd Indicates whether Cardholder is placing an order for merchandise with a future availability or release date.
 * @param reorderItems Indicator for whether the shopper has already purchased the same items in the past.
 * @param reorderItemsInd Indicates whether the cardholder is reordering previously purchased merchandise.
 * @param shipIndicator Indicates shipping method chosen for the transaction.
 */
@Serializable
data class MerchantRiskIndicator (

    /* Whether the chosen delivery address is identical to the billing address. */
    @SerialName(value = "addressMatch") val addressMatch: kotlin.Boolean? = null,

    /* Indicator regarding the delivery address. Allowed values: * `shipToBillingAddress` * `shipToVerifiedAddress` * `shipToNewAddress` * `shipToStore` * `digitalGoods` * `goodsNotShipped` * `other` */
    @SerialName(value = "deliveryAddressIndicator") val deliveryAddressIndicator: MerchantRiskIndicator.DeliveryAddressIndicator? = null,

    /* The delivery email address (for digital goods). */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "deliveryEmail") val deliveryEmail: kotlin.String? = null,

    /* For Electronic delivery, the email address to which the merchandise was delivered. Maximum length: 254 characters. */
    @SerialName(value = "deliveryEmailAddress") val deliveryEmailAddress: kotlin.String? = null,

    /* The estimated delivery time for the shopper to receive the goods. Allowed values: * `electronicDelivery` * `sameDayShipping` * `overnightShipping` * `twoOrMoreDaysShipping` */
    @SerialName(value = "deliveryTimeframe") val deliveryTimeframe: MerchantRiskIndicator.DeliveryTimeframe? = null,

    @SerialName(value = "giftCardAmount") val giftCardAmount: Amount? = null,

    /* For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased. */
    @SerialName(value = "giftCardCount") val giftCardCount: kotlin.Int? = null,

    /* For prepaid or gift card purchase, [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) three-digit currency code of the gift card, other than those listed in Table A.5 of the EMVCo 3D Secure Protocol and Core Functions Specification. */
    @SerialName(value = "giftCardCurr") val giftCardCurr: kotlin.String? = null,

    /* For pre-order purchases, the expected date this product will be available to the shopper. */
    @SerialName(value = "preOrderDate") val preOrderDate: kotlin.String? = null,

    /* Indicator for whether this transaction is for pre-ordering a product. */
    @SerialName(value = "preOrderPurchase") val preOrderPurchase: kotlin.Boolean? = null,

    /* Indicates whether Cardholder is placing an order for merchandise with a future availability or release date. */
    @SerialName(value = "preOrderPurchaseInd") val preOrderPurchaseInd: kotlin.String? = null,

    /* Indicator for whether the shopper has already purchased the same items in the past. */
    @SerialName(value = "reorderItems") val reorderItems: kotlin.Boolean? = null,

    /* Indicates whether the cardholder is reordering previously purchased merchandise. */
    @SerialName(value = "reorderItemsInd") val reorderItemsInd: kotlin.String? = null,

    /* Indicates shipping method chosen for the transaction. */
    @SerialName(value = "shipIndicator") val shipIndicator: kotlin.String? = null

) {

    /**
     * Indicator regarding the delivery address. Allowed values: * `shipToBillingAddress` * `shipToVerifiedAddress` * `shipToNewAddress` * `shipToStore` * `digitalGoods` * `goodsNotShipped` * `other`
     *
     * Values: ShipToBillingAddress,ShipToVerifiedAddress,ShipToNewAddress,ShipToStore,DigitalGoods,GoodsNotShipped,Other
     */
    @Serializable
    enum class DeliveryAddressIndicator(val value: kotlin.String) {
        @SerialName(value = "shipToBillingAddress") ShipToBillingAddress("shipToBillingAddress"),
        @SerialName(value = "shipToVerifiedAddress") ShipToVerifiedAddress("shipToVerifiedAddress"),
        @SerialName(value = "shipToNewAddress") ShipToNewAddress("shipToNewAddress"),
        @SerialName(value = "shipToStore") ShipToStore("shipToStore"),
        @SerialName(value = "digitalGoods") DigitalGoods("digitalGoods"),
        @SerialName(value = "goodsNotShipped") GoodsNotShipped("goodsNotShipped"),
        @SerialName(value = "other") Other("other");
    }
    /**
     * The estimated delivery time for the shopper to receive the goods. Allowed values: * `electronicDelivery` * `sameDayShipping` * `overnightShipping` * `twoOrMoreDaysShipping`
     *
     * Values: ElectronicDelivery,SameDayShipping,OvernightShipping,TwoOrMoreDaysShipping
     */
    @Serializable
    enum class DeliveryTimeframe(val value: kotlin.String) {
        @SerialName(value = "electronicDelivery") ElectronicDelivery("electronicDelivery"),
        @SerialName(value = "sameDayShipping") SameDayShipping("sameDayShipping"),
        @SerialName(value = "overnightShipping") OvernightShipping("overnightShipping"),
        @SerialName(value = "twoOrMoreDaysShipping") TwoOrMoreDaysShipping("twoOrMoreDaysShipping");
    }
}

