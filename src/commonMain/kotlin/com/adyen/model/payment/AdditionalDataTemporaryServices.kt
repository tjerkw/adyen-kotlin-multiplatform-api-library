/**
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.payment


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param enhancedSchemeDataCustomerReference The customer code, if supplied by a customer. * Encoding: ASCII * maxLength: 25
 * @param enhancedSchemeDataEmployeeName The name or ID of the person working in a temporary capacity. * maxLength: 40.   * Must not be all spaces.  *Must not be all zeros.
 * @param enhancedSchemeDataJobDescription The job description of the person working in a temporary capacity. * maxLength: 40  * Must not be all spaces.  *Must not be all zeros.
 * @param enhancedSchemeDataRegularHoursRate The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 7 * Must not be empty * Can be all zeros
 * @param enhancedSchemeDataRegularHoursWorked The hours worked. * maxLength: 7 * Must not be empty * Can be all zeros
 * @param enhancedSchemeDataRequestName The name of the person requesting temporary services. * maxLength: 40 * Must not be all zeros * Must not be all spaces
 * @param enhancedSchemeDataTempStartDate The billing period start date. * Format: ddMMyy * maxLength: 6
 * @param enhancedSchemeDataTempWeekEnding The billing period end date. * Format: ddMMyy * maxLength: 6
 * @param enhancedSchemeDataTotalTaxAmount The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00 * maxLength: 12
 */
@Serializable
data class AdditionalDataTemporaryServices (

    /* The customer code, if supplied by a customer. * Encoding: ASCII * maxLength: 25 */
    @SerialName(value = "enhancedSchemeData.customerReference") val enhancedSchemeDataCustomerReference: kotlin.String? = null,

    /* The name or ID of the person working in a temporary capacity. * maxLength: 40.   * Must not be all spaces.  *Must not be all zeros. */
    @SerialName(value = "enhancedSchemeData.employeeName") val enhancedSchemeDataEmployeeName: kotlin.String? = null,

    /* The job description of the person working in a temporary capacity. * maxLength: 40  * Must not be all spaces.  *Must not be all zeros. */
    @SerialName(value = "enhancedSchemeData.jobDescription") val enhancedSchemeDataJobDescription: kotlin.String? = null,

    /* The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 7 * Must not be empty * Can be all zeros */
    @SerialName(value = "enhancedSchemeData.regularHoursRate") val enhancedSchemeDataRegularHoursRate: kotlin.String? = null,

    /* The hours worked. * maxLength: 7 * Must not be empty * Can be all zeros */
    @SerialName(value = "enhancedSchemeData.regularHoursWorked") val enhancedSchemeDataRegularHoursWorked: kotlin.String? = null,

    /* The name of the person requesting temporary services. * maxLength: 40 * Must not be all zeros * Must not be all spaces */
    @SerialName(value = "enhancedSchemeData.requestName") val enhancedSchemeDataRequestName: kotlin.String? = null,

    /* The billing period start date. * Format: ddMMyy * maxLength: 6 */
    @SerialName(value = "enhancedSchemeData.tempStartDate") val enhancedSchemeDataTempStartDate: kotlin.String? = null,

    /* The billing period end date. * Format: ddMMyy * maxLength: 6 */
    @SerialName(value = "enhancedSchemeData.tempWeekEnding") val enhancedSchemeDataTempWeekEnding: kotlin.String? = null,

    /* The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00 * maxLength: 12 */
    @SerialName(value = "enhancedSchemeData.totalTaxAmount") val enhancedSchemeDataTotalTaxAmount: kotlin.String? = null

)

