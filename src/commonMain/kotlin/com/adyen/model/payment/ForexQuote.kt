/**
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.payment

import com.adyen.model.payment.Amount

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param basePoints The base points.
 * @param validTill The date until which the forex quote is valid.
 * @param account The account name.
 * @param accountType The account type.
 * @param baseAmount 
 * @param buy 
 * @param interbank 
 * @param reference The reference assigned to the forex quote request.
 * @param sell 
 * @param signature The signature to validate the integrity.
 * @param source The source of the forex quote.
 * @param type The type of forex.
 */
@Serializable
data class ForexQuote (

    /* The base points. */
    @SerialName(value = "basePoints") @Required val basePoints: kotlin.Int,

    /* The date until which the forex quote is valid. */
    @SerialName(value = "validTill") @Required val validTill: kotlin.String,

    /* The account name. */
    @SerialName(value = "account") val account: kotlin.String? = null,

    /* The account type. */
    @SerialName(value = "accountType") val accountType: kotlin.String? = null,

    @SerialName(value = "baseAmount") val baseAmount: Amount? = null,

    @SerialName(value = "buy") val buy: Amount? = null,

    @SerialName(value = "interbank") val interbank: Amount? = null,

    /* The reference assigned to the forex quote request. */
    @SerialName(value = "reference") val reference: kotlin.String? = null,

    @SerialName(value = "sell") val sell: Amount? = null,

    /* The signature to validate the integrity. */
    @SerialName(value = "signature") val signature: kotlin.String? = null,

    /* The source of the forex quote. */
    @SerialName(value = "source") val source: kotlin.String? = null,

    /* The type of forex. */
    @SerialName(value = "type") val type: kotlin.String? = null

)

