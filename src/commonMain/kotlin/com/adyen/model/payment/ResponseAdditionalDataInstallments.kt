/**
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.payment


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param installmentPaymentDataInstallmentType Type of installment. The value of `installmentType` should be **IssuerFinanced**.
 * @param installmentPaymentDataOptionItemNrAnnualPercentageRate Annual interest rate.
 * @param installmentPaymentDataOptionItemNrFirstInstallmentAmount First Installment Amount in minor units.
 * @param installmentPaymentDataOptionItemNrInstallmentFee Installment fee amount in minor units.
 * @param installmentPaymentDataOptionItemNrInterestRate Interest rate for the installment period.
 * @param installmentPaymentDataOptionItemNrMaximumNumberOfInstallments Maximum number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrMinimumNumberOfInstallments Minimum number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrNumberOfInstallments Total number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrSubsequentInstallmentAmount Subsequent Installment Amount in minor units.
 * @param installmentPaymentDataOptionItemNrTotalAmountDue Total amount in minor units.
 * @param installmentPaymentDataPaymentOptions Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments
 * @param installmentsValue The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments.
 */
@Serializable
data class ResponseAdditionalDataInstallments (

    /* Type of installment. The value of `installmentType` should be **IssuerFinanced**. */
    @SerialName(value = "installmentPaymentData.installmentType") val installmentPaymentDataInstallmentType: kotlin.String? = null,

    /* Annual interest rate. */
    @SerialName(value = "installmentPaymentData.option[itemNr].annualPercentageRate") val installmentPaymentDataOptionItemNrAnnualPercentageRate: kotlin.String? = null,

    /* First Installment Amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].firstInstallmentAmount") val installmentPaymentDataOptionItemNrFirstInstallmentAmount: kotlin.String? = null,

    /* Installment fee amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].installmentFee") val installmentPaymentDataOptionItemNrInstallmentFee: kotlin.String? = null,

    /* Interest rate for the installment period. */
    @SerialName(value = "installmentPaymentData.option[itemNr].interestRate") val installmentPaymentDataOptionItemNrInterestRate: kotlin.String? = null,

    /* Maximum number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].maximumNumberOfInstallments") val installmentPaymentDataOptionItemNrMaximumNumberOfInstallments: kotlin.String? = null,

    /* Minimum number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].minimumNumberOfInstallments") val installmentPaymentDataOptionItemNrMinimumNumberOfInstallments: kotlin.String? = null,

    /* Total number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].numberOfInstallments") val installmentPaymentDataOptionItemNrNumberOfInstallments: kotlin.String? = null,

    /* Subsequent Installment Amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].subsequentInstallmentAmount") val installmentPaymentDataOptionItemNrSubsequentInstallmentAmount: kotlin.String? = null,

    /* Total amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].totalAmountDue") val installmentPaymentDataOptionItemNrTotalAmountDue: kotlin.String? = null,

    /* Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments */
    @SerialName(value = "installmentPaymentData.paymentOptions") val installmentPaymentDataPaymentOptions: kotlin.String? = null,

    /* The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments. */
    @SerialName(value = "installments.value") val installmentsValue: kotlin.String? = null

)

