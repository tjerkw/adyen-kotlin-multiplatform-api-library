/**
 * Adyen Balance Control API
 *
 * The Balance Control API lets you transfer funds between merchant accounts that belong to the same legal entity and are under the same company account.  ## Authentication To connect to the Balance Control API, you must authenticate your requests with an [API key or basic auth username and password](https://docs.adyen.com/development-resources/api-authentication). To learn how you can generate these, see [API credentials](https://docs.adyen.com/development-resources/api-credentials).Here is an example of authenticating a request with an API key:  ``` curl -H \"X-API-Key: Your_API_key\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate API credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Balance Control API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example:  ``` https://pal-test.adyen.com/pal/servlet/BalanceControl/v1/balanceTransfer ``` 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.balancecontrol

import com.adyen.model.balancecontrol.Amount

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param amount 
 * @param fromMerchant The unique identifier of the source merchant account from which funds are deducted.
 * @param toMerchant The unique identifier of the destination merchant account from which funds are transferred.
 * @param type The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
 * @param description A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.
 * @param reference A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference. Maximum length: 80 characters.
 */
@Serializable
data class BalanceTransferRequest (

    @SerialName(value = "amount") @Required val amount: Amount,

    /* The unique identifier of the source merchant account from which funds are deducted. */
    @SerialName(value = "fromMerchant") @Required val fromMerchant: kotlin.String,

    /* The unique identifier of the destination merchant account from which funds are transferred. */
    @SerialName(value = "toMerchant") @Required val toMerchant: kotlin.String,

    /* The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**. */
    @SerialName(value = "type") @Required val type: BalanceTransferRequest.Type,

    /* A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference. Maximum length: 80 characters. */
    @SerialName(value = "reference") val reference: kotlin.String? = null

) {

    /**
     * The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
     *
     * Values: Tax,Fee,TerminalSale,Credit,Debit,Adjustment
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "tax") Tax("tax"),
        @SerialName(value = "fee") Fee("fee"),
        @SerialName(value = "terminalSale") TerminalSale("terminalSale"),
        @SerialName(value = "credit") Credit("credit"),
        @SerialName(value = "debit") Debit("debit"),
        @SerialName(value = "adjustment") Adjustment("adjustment");
    }
}

