/**
 * Configuration webhooks
 *
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.configurationwebhooks

import com.adyen.model.configurationwebhooks.AccountSupportingEntityCapability
import com.adyen.model.configurationwebhooks.CapabilityProblem
import com.adyen.model.configurationwebhooks.CapabilitySettings

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param allowed Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
 * @param allowedLevel The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**.
 * @param allowedSettings 
 * @param enabled Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
 * @param problems Contains verification errors and the actions that you can take to resolve them.
 * @param requested Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
 * @param requestedLevel The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**.
 * @param requestedSettings 
 * @param transferInstruments Contains the status of the transfer instruments associated with this capability. 
 * @param verificationStatus The status of the verification checks for the capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability. 
 */
@Serializable
data class AccountHolderCapability (

    /* Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability. */
    @SerialName(value = "allowed") val allowed: kotlin.Boolean? = null,

    /* The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**. */
    @SerialName(value = "allowedLevel") val allowedLevel: AccountHolderCapability.AllowedLevel? = null,

    @SerialName(value = "allowedSettings") val allowedSettings: CapabilitySettings? = null,

    /* Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder. */
    @SerialName(value = "enabled") val enabled: kotlin.Boolean? = null,

    /* Contains verification errors and the actions that you can take to resolve them. */
    @SerialName(value = "problems") val problems: kotlin.collections.List<CapabilityProblem>? = null,

    /* Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field. */
    @SerialName(value = "requested") val requested: kotlin.Boolean? = null,

    /* The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**. */
    @SerialName(value = "requestedLevel") val requestedLevel: AccountHolderCapability.RequestedLevel? = null,

    @SerialName(value = "requestedSettings") val requestedSettings: CapabilitySettings? = null,

    /* Contains the status of the transfer instruments associated with this capability.  */
    @SerialName(value = "transferInstruments") val transferInstruments: kotlin.collections.List<AccountSupportingEntityCapability>? = null,

    /* The status of the verification checks for the capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.  */
    @SerialName(value = "verificationStatus") val verificationStatus: AccountHolderCapability.VerificationStatus? = null

) {

    /**
     * The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**.
     *
     * Values: High,Low,Medium,NotApplicable
     */
    @Serializable
    enum class AllowedLevel(val value: kotlin.String) {
        @SerialName(value = "high") High("high"),
        @SerialName(value = "low") Low("low"),
        @SerialName(value = "medium") Medium("medium"),
        @SerialName(value = "notApplicable") NotApplicable("notApplicable");
    }
    /**
     * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**.
     *
     * Values: High,Low,Medium,NotApplicable
     */
    @Serializable
    enum class RequestedLevel(val value: kotlin.String) {
        @SerialName(value = "high") High("high"),
        @SerialName(value = "low") Low("low"),
        @SerialName(value = "medium") Medium("medium"),
        @SerialName(value = "notApplicable") NotApplicable("notApplicable");
    }
    /**
     * The status of the verification checks for the capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability. 
     *
     * Values: Invalid,Pending,Rejected,Valid
     */
    @Serializable
    enum class VerificationStatus(val value: kotlin.String) {
        @SerialName(value = "invalid") Invalid("invalid"),
        @SerialName(value = "pending") Pending("pending"),
        @SerialName(value = "rejected") Rejected("rejected"),
        @SerialName(value = "valid") Valid("valid");
    }
}

