/**
 * Configuration webhooks
 *
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.configurationwebhooks

import com.adyen.model.configurationwebhooks.AccountHolderNotificationData

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param `data` 
 * @param environment The environment from which the webhook originated.  Possible values: **test**, **live**.
 * @param type Type of webhook.
 */
@Serializable
data class AccountHolderNotificationRequest (

    @SerialName(value = "data") @Required val `data`: AccountHolderNotificationData,

    /* The environment from which the webhook originated.  Possible values: **test**, **live**. */
    @SerialName(value = "environment") @Required val environment: kotlin.String,

    /* Type of webhook. */
    @SerialName(value = "type") @Required val type: AccountHolderNotificationRequest.Type

) {

    /**
     * Type of webhook.
     *
     * Values: Updated,Created
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "balancePlatform.accountHolder.updated") Updated("balancePlatform.accountHolder.updated"),
        @SerialName(value = "balancePlatform.accountHolder.created") Created("balancePlatform.accountHolder.created");
    }
}

