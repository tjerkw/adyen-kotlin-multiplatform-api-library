/**
 * Transfer webhooks
 *
 * Adyen sends webhooks to inform your system about incoming and outgoing transfers in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.transferwebhooks

import com.adyen.model.transferwebhooks.Amount

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param amount 
 * @param amountAdjustmentType The type of markup that is applied to an authorised payment.  Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**.
 * @param basepoints The basepoints associated with the applied markup.
 */
@Serializable
data class AmountAdjustment (

    @SerialName(value = "amount") val amount: Amount? = null,

    /* The type of markup that is applied to an authorised payment.  Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**. */
    @SerialName(value = "amountAdjustmentType") val amountAdjustmentType: AmountAdjustment.AmountAdjustmentType? = null,

    /* The basepoints associated with the applied markup. */
    @SerialName(value = "basepoints") val basepoints: kotlin.Int? = null

) {

    /**
     * The type of markup that is applied to an authorised payment.  Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**.
     *
     * Values: AtmMarkup,AuthHoldReserve,Exchange,ForexMarkup
     */
    @Serializable
    enum class AmountAdjustmentType(val value: kotlin.String) {
        @SerialName(value = "atmMarkup") AtmMarkup("atmMarkup"),
        @SerialName(value = "authHoldReserve") AuthHoldReserve("authHoldReserve"),
        @SerialName(value = "exchange") Exchange("exchange"),
        @SerialName(value = "forexMarkup") ForexMarkup("forexMarkup");
    }
}

