/**
 * Transfer webhooks
 *
 * Adyen sends webhooks to inform your system about incoming and outgoing transfers in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.transferwebhooks

import com.adyen.model.transferwebhooks.TransactionEventViolation

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param advice The advice given by the Risk analysis.
 * @param allHardBlockRulesPassed Indicates whether the transaction passed the evaluation for all hardblock rules
 * @param score The score of the Risk analysis.
 * @param triggeredTransactionRules Array containing all the transaction rules that the transaction triggered.
 */
@Serializable
data class TransactionRulesResult (

    /* The advice given by the Risk analysis. */
    @SerialName(value = "advice") val advice: kotlin.String? = null,

    /* Indicates whether the transaction passed the evaluation for all hardblock rules */
    @SerialName(value = "allHardBlockRulesPassed") val allHardBlockRulesPassed: kotlin.Boolean? = null,

    /* The score of the Risk analysis. */
    @SerialName(value = "score") val score: kotlin.Int? = null,

    /* Array containing all the transaction rules that the transaction triggered. */
    @SerialName(value = "triggeredTransactionRules") val triggeredTransactionRules: kotlin.collections.List<TransactionEventViolation>? = null

)

