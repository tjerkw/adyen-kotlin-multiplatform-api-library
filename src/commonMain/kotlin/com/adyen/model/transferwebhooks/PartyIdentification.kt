/**
 * Transfer webhooks
 *
 * Adyen sends webhooks to inform your system about incoming and outgoing transfers in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.transferwebhooks

import com.adyen.model.transferwebhooks.Address

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param fullName The name of the entity.
 * @param address 
 * @param dateOfBirth The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before January 1, 1900.  Allowed only when `type` is **individual**.
 * @param firstName First name of the individual.  Allowed only when `type` is **individual**.
 * @param lastName Last name of the individual.  Allowed only when `type` is **individual**.
 * @param reference A unique reference to identify the party or counterparty involved in transfers. This identifier ensures consistency and uniqueness throughout all transactions initiated to and from the same party. For example, your client's unique wallet or payee ID.
 * @param type The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**.
 */
@Serializable
data class PartyIdentification (

    /* The name of the entity. */
    @SerialName(value = "fullName") @Required val fullName: kotlin.String,

    @SerialName(value = "address") val address: Address? = null,

    /* The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before January 1, 1900.  Allowed only when `type` is **individual**. */
    @SerialName(value = "dateOfBirth") val dateOfBirth: kotlin.String? = null,

    /* First name of the individual.  Allowed only when `type` is **individual**. */
    @SerialName(value = "firstName") val firstName: kotlin.String? = null,

    /* Last name of the individual.  Allowed only when `type` is **individual**. */
    @SerialName(value = "lastName") val lastName: kotlin.String? = null,

    /* A unique reference to identify the party or counterparty involved in transfers. This identifier ensures consistency and uniqueness throughout all transactions initiated to and from the same party. For example, your client's unique wallet or payee ID. */
    @SerialName(value = "reference") val reference: kotlin.String? = null,

    /* The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**. */
    @SerialName(value = "type") val type: PartyIdentification.Type? = Type.Unknown

) {

    /**
     * The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**.
     *
     * Values: Individual,Organization,Unknown
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "individual") Individual("individual"),
        @SerialName(value = "organization") Organization("organization"),
        @SerialName(value = "unknown") Unknown("unknown");
    }
}

