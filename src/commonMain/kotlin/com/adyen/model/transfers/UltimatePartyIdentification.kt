/**
 * Transfers API
 *
 * >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v4/transfers ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v4`.  
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.transfers

import com.adyen.model.transfers.Address

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param fullName The name of the entity.
 * @param address 
 * @param dateOfBirth The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before January 1, 1900.  Allowed only when `type` is **individual**.
 * @param firstName First name of the individual.  Allowed only when `type` is **individual**.
 * @param lastName Last name of the individual.  Allowed only when `type` is **individual**.
 * @param reference A unique reference to identify the party or counterparty involved in transfers. This identifier ensures consistency and uniqueness throughout all transactions initiated to and from the same party. For example, your client's unique wallet or payee ID.
 * @param type The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**.
 */
@Serializable
data class UltimatePartyIdentification (

    /* The name of the entity. */
    @SerialName(value = "fullName") @Required val fullName: kotlin.String,

    @SerialName(value = "address") val address: Address? = null,

    /* The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before January 1, 1900.  Allowed only when `type` is **individual**. */
    @SerialName(value = "dateOfBirth") val dateOfBirth: kotlin.String? = null,

    /* First name of the individual.  Allowed only when `type` is **individual**. */
    @SerialName(value = "firstName") val firstName: kotlin.String? = null,

    /* Last name of the individual.  Allowed only when `type` is **individual**. */
    @SerialName(value = "lastName") val lastName: kotlin.String? = null,

    /* A unique reference to identify the party or counterparty involved in transfers. This identifier ensures consistency and uniqueness throughout all transactions initiated to and from the same party. For example, your client's unique wallet or payee ID. */
    @SerialName(value = "reference") val reference: kotlin.String? = null,

    /* The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**. */
    @SerialName(value = "type") val type: UltimatePartyIdentification.Type? = Type.Unknown

) {

    /**
     * The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**.
     *
     * Values: Individual,Organization,Unknown
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "individual") Individual("individual"),
        @SerialName(value = "organization") Organization("organization"),
        @SerialName(value = "unknown") Unknown("unknown");
    }
}

