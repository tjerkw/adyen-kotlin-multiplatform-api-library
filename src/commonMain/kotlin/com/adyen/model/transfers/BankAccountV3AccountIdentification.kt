/**
 * Transfers API
 *
 * >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v4/transfers ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v4`.  
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.transfers

import com.adyen.model.transfers.AULocalAccountIdentification
import com.adyen.model.transfers.AdditionalBankIdentification
import com.adyen.model.transfers.BRLocalAccountIdentification
import com.adyen.model.transfers.CALocalAccountIdentification
import com.adyen.model.transfers.CZLocalAccountIdentification
import com.adyen.model.transfers.DKLocalAccountIdentification
import com.adyen.model.transfers.HKLocalAccountIdentification
import com.adyen.model.transfers.HULocalAccountIdentification
import com.adyen.model.transfers.IbanAccountIdentification
import com.adyen.model.transfers.NOLocalAccountIdentification
import com.adyen.model.transfers.NZLocalAccountIdentification
import com.adyen.model.transfers.NumberAndBicAccountIdentification
import com.adyen.model.transfers.PLLocalAccountIdentification
import com.adyen.model.transfers.SELocalAccountIdentification
import com.adyen.model.transfers.SGLocalAccountIdentification
import com.adyen.model.transfers.UKLocalAccountIdentification
import com.adyen.model.transfers.USLocalAccountIdentification

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Contains the bank account details. The fields required in this object depend on the country of the bank account and the currency of the transfer.
 *
 * @param accountNumber The bank account number, without separators or whitespace.
 * @param bsbCode The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or whitespace.
 * @param type **usLocal**
 * @param bankCode The 4-digit bank code (Registreringsnummer) (without separators or whitespace).
 * @param branchNumber The bank account branch number, without separators or whitespace.
 * @param institutionNumber The 3-digit institution number, without separators or whitespace.
 * @param transitNumber The 5-digit transit number, without separators or whitespace.
 * @param clearingCode The 3-digit clearing code, without separators or whitespace.
 * @param iban The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
 * @param bic The bank's 8- or 11-character BIC or SWIFT code.
 * @param clearingNumber The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace.
 * @param sortCode The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or whitespace.
 * @param routingNumber The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or whitespace.
 * @param accountType The bank account type.  Possible values: **checking** or **savings**. Defaults to **checking**.
 * @param additionalBankIdentification 
 */
@Serializable
data class BankAccountV3AccountIdentification (

    /* The bank account number, without separators or whitespace. */
    @SerialName(value = "accountNumber") @Required val accountNumber: kotlin.String,

    /* The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or whitespace. */
    @SerialName(value = "bsbCode") @Required val bsbCode: kotlin.String,

    /* **usLocal** */
    @SerialName(value = "type") @Required val type: BankAccountV3AccountIdentification.Type = Type.UsLocal,

    /* The 4-digit bank code (Registreringsnummer) (without separators or whitespace). */
    @SerialName(value = "bankCode") @Required val bankCode: kotlin.String,

    /* The bank account branch number, without separators or whitespace. */
    @SerialName(value = "branchNumber") @Required val branchNumber: kotlin.String,

    /* The 3-digit institution number, without separators or whitespace. */
    @SerialName(value = "institutionNumber") @Required val institutionNumber: kotlin.String,

    /* The 5-digit transit number, without separators or whitespace. */
    @SerialName(value = "transitNumber") @Required val transitNumber: kotlin.String,

    /* The 3-digit clearing code, without separators or whitespace. */
    @SerialName(value = "clearingCode") @Required val clearingCode: kotlin.String,

    /* The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard. */
    @SerialName(value = "iban") @Required val iban: kotlin.String,

    /* The bank's 8- or 11-character BIC or SWIFT code. */
    @SerialName(value = "bic") @Required val bic: kotlin.String,

    /* The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace. */
    @SerialName(value = "clearingNumber") @Required val clearingNumber: kotlin.String,

    /* The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or whitespace. */
    @SerialName(value = "sortCode") @Required val sortCode: kotlin.String,

    /* The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or whitespace. */
    @SerialName(value = "routingNumber") @Required val routingNumber: kotlin.String,

    /* The bank account type.  Possible values: **checking** or **savings**. Defaults to **checking**. */
    @SerialName(value = "accountType") val accountType: BankAccountV3AccountIdentification.AccountType? = AccountType.Checking,

    @SerialName(value = "additionalBankIdentification") val additionalBankIdentification: AdditionalBankIdentification? = null

) {

    /**
     * **usLocal**
     *
     * Values: UsLocal
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "usLocal") UsLocal("usLocal");
    }
    /**
     * The bank account type.  Possible values: **checking** or **savings**. Defaults to **checking**.
     *
     * Values: Checking,Savings
     */
    @Serializable
    enum class AccountType(val value: kotlin.String) {
        @SerialName(value = "checking") Checking("checking"),
        @SerialName(value = "savings") Savings("savings");
    }
}

