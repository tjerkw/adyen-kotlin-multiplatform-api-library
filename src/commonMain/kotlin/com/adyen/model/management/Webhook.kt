/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.management

import com.adyen.model.management.AdditionalSettingsResponse
import com.adyen.model.management.WebhookLinks

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param active Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account.
 * @param communicationFormat Format or protocol for receiving webhooks. Possible values: * **soap** * **http** * **json** 
 * @param type The type of webhook. Possible values are:  - **standard** - **account-settings-notification** - **banktransfer-notification** - **boletobancario-notification** - **directdebit-notification** - **ach-notification-of-change-notification** - **pending-notification** - **ideal-notification** - **ideal-pending-notification** - **report-notification** - **terminal-api-notification**  Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
 * @param url Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
 * @param links 
 * @param acceptsExpiredCertificate Indicates if expired SSL certificates are accepted. Default value: **false**.
 * @param acceptsSelfSignedCertificate Indicates if self-signed SSL certificates are accepted. Default value: **false**.
 * @param acceptsUntrustedRootCertificate Indicates if untrusted SSL certificates are accepted. Default value: **false**.
 * @param accountReference Reference to the account the webook is set on.
 * @param additionalSettings 
 * @param certificateAlias The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias.
 * @param description Your description for this webhook configuration.
 * @param encryptionProtocol SSL version to access the public webhook URL specified in the `url` field. Possible values: * **TLSv1.3** * **TLSv1.2** * **HTTP** - Only allowed on Test environment.  If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
 * @param filterMerchantAccountType Shows how merchant accounts are included in company-level webhooks. Possible values: * **includeAccounts** * **excludeAccounts** * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
 * @param filterMerchantAccounts A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.  Required if `filterMerchantAccountType` is either: * **includeAccounts** * **excludeAccounts**  Not needed for `filterMerchantAccountType`: **allAccounts**.
 * @param hasError Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).
 * @param hasPassword Indicates if the webhook is password protected.
 * @param hmacKeyCheckValue The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook.
 * @param id Unique identifier for this webhook.
 * @param networkType Network type for Terminal API details webhooks.
 * @param populateSoapActionHeader Indicates if the SOAP action header needs to be populated. Default value: **false**.  Only applies if `communicationFormat`: **soap**.
 * @param username Username to access the webhook URL.
 */
@Serializable
data class Webhook (

    /* Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account. */
    @SerialName(value = "active") @Required val active: kotlin.Boolean,

    /* Format or protocol for receiving webhooks. Possible values: * **soap** * **http** * **json**  */
    @SerialName(value = "communicationFormat") @Required val communicationFormat: Webhook.CommunicationFormat,

    /* The type of webhook. Possible values are:  - **standard** - **account-settings-notification** - **banktransfer-notification** - **boletobancario-notification** - **directdebit-notification** - **ach-notification-of-change-notification** - **pending-notification** - **ideal-notification** - **ideal-pending-notification** - **report-notification** - **terminal-api-notification**  Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications). */
    @SerialName(value = "type") @Required val type: kotlin.String,

    /* Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**. */
    @SerialName(value = "url") @Required val url: kotlin.String,

    @SerialName(value = "_links") val links: WebhookLinks? = null,

    /* Indicates if expired SSL certificates are accepted. Default value: **false**. */
    @SerialName(value = "acceptsExpiredCertificate") val acceptsExpiredCertificate: kotlin.Boolean? = null,

    /* Indicates if self-signed SSL certificates are accepted. Default value: **false**. */
    @SerialName(value = "acceptsSelfSignedCertificate") val acceptsSelfSignedCertificate: kotlin.Boolean? = null,

    /* Indicates if untrusted SSL certificates are accepted. Default value: **false**. */
    @SerialName(value = "acceptsUntrustedRootCertificate") val acceptsUntrustedRootCertificate: kotlin.Boolean? = null,

    /* Reference to the account the webook is set on. */
    @SerialName(value = "accountReference") val accountReference: kotlin.String? = null,

    @SerialName(value = "additionalSettings") val additionalSettings: AdditionalSettingsResponse? = null,

    /* The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias. */
    @SerialName(value = "certificateAlias") val certificateAlias: kotlin.String? = null,

    /* Your description for this webhook configuration. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* SSL version to access the public webhook URL specified in the `url` field. Possible values: * **TLSv1.3** * **TLSv1.2** * **HTTP** - Only allowed on Test environment.  If not specified, the webhook will use `sslVersion`: **TLSv1.2**. */
    @SerialName(value = "encryptionProtocol") val encryptionProtocol: Webhook.EncryptionProtocol? = null,

    /* Shows how merchant accounts are included in company-level webhooks. Possible values: * **includeAccounts** * **excludeAccounts** * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`. */
    @SerialName(value = "filterMerchantAccountType") val filterMerchantAccountType: Webhook.FilterMerchantAccountType? = null,

    /* A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.  Required if `filterMerchantAccountType` is either: * **includeAccounts** * **excludeAccounts**  Not needed for `filterMerchantAccountType`: **allAccounts**. */
    @SerialName(value = "filterMerchantAccounts") val filterMerchantAccounts: kotlin.collections.List<kotlin.String>? = null,

    /* Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test). */
    @SerialName(value = "hasError") val hasError: kotlin.Boolean? = null,

    /* Indicates if the webhook is password protected. */
    @SerialName(value = "hasPassword") val hasPassword: kotlin.Boolean? = null,

    /* The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook. */
    @SerialName(value = "hmacKeyCheckValue") val hmacKeyCheckValue: kotlin.String? = null,

    /* Unique identifier for this webhook. */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* Network type for Terminal API details webhooks. */
    @SerialName(value = "networkType") val networkType: Webhook.NetworkType? = null,

    /* Indicates if the SOAP action header needs to be populated. Default value: **false**.  Only applies if `communicationFormat`: **soap**. */
    @SerialName(value = "populateSoapActionHeader") val populateSoapActionHeader: kotlin.Boolean? = null,

    /* Username to access the webhook URL. */
    @SerialName(value = "username") val username: kotlin.String? = null

) {

    /**
     * Format or protocol for receiving webhooks. Possible values: * **soap** * **http** * **json** 
     *
     * Values: Http,Json,Soap
     */
    @Serializable
    enum class CommunicationFormat(val value: kotlin.String) {
        @SerialName(value = "http") Http("http"),
        @SerialName(value = "json") Json("json"),
        @SerialName(value = "soap") Soap("soap");
    }
    /**
     * SSL version to access the public webhook URL specified in the `url` field. Possible values: * **TLSv1.3** * **TLSv1.2** * **HTTP** - Only allowed on Test environment.  If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
     *
     * Values: HTTP,TLSv1Period2,TLSv1Period3
     */
    @Serializable
    enum class EncryptionProtocol(val value: kotlin.String) {
        @SerialName(value = "HTTP") HTTP("HTTP"),
        @SerialName(value = "TLSv1.2") TLSv1Period2("TLSv1.2"),
        @SerialName(value = "TLSv1.3") TLSv1Period3("TLSv1.3");
    }
    /**
     * Shows how merchant accounts are included in company-level webhooks. Possible values: * **includeAccounts** * **excludeAccounts** * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
     *
     * Values: AllAccounts,ExcludeAccounts,IncludeAccounts
     */
    @Serializable
    enum class FilterMerchantAccountType(val value: kotlin.String) {
        @SerialName(value = "allAccounts") AllAccounts("allAccounts"),
        @SerialName(value = "excludeAccounts") ExcludeAccounts("excludeAccounts"),
        @SerialName(value = "includeAccounts") IncludeAccounts("includeAccounts");
    }
    /**
     * Network type for Terminal API details webhooks.
     *
     * Values: Local,Public
     */
    @Serializable
    enum class NetworkType(val value: kotlin.String) {
        @SerialName(value = "local") Local("local"),
        @SerialName(value = "public") Public("public");
    }
}

