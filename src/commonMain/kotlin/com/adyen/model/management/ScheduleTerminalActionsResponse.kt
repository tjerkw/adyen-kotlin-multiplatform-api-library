/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.management

import com.adyen.model.management.ScheduleTerminalActionsRequestActionDetails
import com.adyen.model.management.TerminalActionScheduleDetail

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param actionDetails 
 * @param items A list containing a terminal ID and an action ID for each terminal that the action was scheduled for.
 * @param scheduledAt The date and time when the action should happen.  Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00**  The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal.  An empty value causes the action to be sent as soon as possible: at the next maintenance call.
 * @param storeId The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.
 * @param terminalsWithErrors The validation errors that occurred in the list of terminals, and for each error the IDs of the terminals that the error applies to.
 * @param totalErrors The number of terminals for which scheduling the action failed.
 * @param totalScheduled The number of terminals for which the action was successfully scheduled. This doesn't mean the action has happened yet.
 */
@Serializable
data class ScheduleTerminalActionsResponse (

    @SerialName(value = "actionDetails") val actionDetails: ScheduleTerminalActionsRequestActionDetails? = null,

    /* A list containing a terminal ID and an action ID for each terminal that the action was scheduled for. */
    @SerialName(value = "items") val items: kotlin.collections.List<TerminalActionScheduleDetail>? = null,

    /* The date and time when the action should happen.  Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00**  The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal.  An empty value causes the action to be sent as soon as possible: at the next maintenance call. */
    @SerialName(value = "scheduledAt") val scheduledAt: kotlin.String? = null,

    /* The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store. */
    @SerialName(value = "storeId") val storeId: kotlin.String? = null,

    /* The validation errors that occurred in the list of terminals, and for each error the IDs of the terminals that the error applies to. */
    @SerialName(value = "terminalsWithErrors") val terminalsWithErrors: kotlin.collections.Map<kotlin.String, kotlin.collections.List<kotlin.String>>? = null,

    /* The number of terminals for which scheduling the action failed. */
    @SerialName(value = "totalErrors") val totalErrors: kotlin.Int? = null,

    /* The number of terminals for which the action was successfully scheduled. This doesn't mean the action has happened yet. */
    @SerialName(value = "totalScheduled") val totalScheduled: kotlin.Int? = null

)

