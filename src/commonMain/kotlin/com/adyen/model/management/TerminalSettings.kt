/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.management

import com.adyen.model.management.CardholderReceipt
import com.adyen.model.management.Connectivity
import com.adyen.model.management.Gratuity
import com.adyen.model.management.Hardware
import com.adyen.model.management.Localization
import com.adyen.model.management.Nexo
import com.adyen.model.management.OfflineProcessing
import com.adyen.model.management.Opi
import com.adyen.model.management.Passcodes
import com.adyen.model.management.PayAtTable
import com.adyen.model.management.Payment
import com.adyen.model.management.ReceiptOptions
import com.adyen.model.management.ReceiptPrinting
import com.adyen.model.management.Signature
import com.adyen.model.management.Standalone
import com.adyen.model.management.Surcharge
import com.adyen.model.management.TapToPay
import com.adyen.model.management.Timeouts
import com.adyen.model.management.WifiProfiles

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param cardholderReceipt 
 * @param connectivity 
 * @param gratuities Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.
 * @param hardware 
 * @param localization 
 * @param nexo 
 * @param offlineProcessing 
 * @param opi 
 * @param passcodes 
 * @param payAtTable 
 * @param payment 
 * @param receiptOptions 
 * @param receiptPrinting 
 * @param signature 
 * @param standalone 
 * @param surcharge 
 * @param tapToPay 
 * @param timeouts 
 * @param wifiProfiles 
 */
@Serializable
data class TerminalSettings (

    @SerialName(value = "cardholderReceipt") val cardholderReceipt: CardholderReceipt? = null,

    @SerialName(value = "connectivity") val connectivity: Connectivity? = null,

    /* Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip. */
    @SerialName(value = "gratuities") val gratuities: kotlin.collections.List<Gratuity>? = null,

    @SerialName(value = "hardware") val hardware: Hardware? = null,

    @SerialName(value = "localization") val localization: Localization? = null,

    @SerialName(value = "nexo") val nexo: Nexo? = null,

    @SerialName(value = "offlineProcessing") val offlineProcessing: OfflineProcessing? = null,

    @SerialName(value = "opi") val opi: Opi? = null,

    @SerialName(value = "passcodes") val passcodes: Passcodes? = null,

    @SerialName(value = "payAtTable") val payAtTable: PayAtTable? = null,

    @SerialName(value = "payment") val payment: Payment? = null,

    @SerialName(value = "receiptOptions") val receiptOptions: ReceiptOptions? = null,

    @SerialName(value = "receiptPrinting") val receiptPrinting: ReceiptPrinting? = null,

    @SerialName(value = "signature") val signature: Signature? = null,

    @SerialName(value = "standalone") val standalone: Standalone? = null,

    @SerialName(value = "surcharge") val surcharge: Surcharge? = null,

    @SerialName(value = "tapToPay") val tapToPay: TapToPay? = null,

    @SerialName(value = "timeouts") val timeouts: Timeouts? = null,

    @SerialName(value = "wifiProfiles") val wifiProfiles: WifiProfiles? = null

)

