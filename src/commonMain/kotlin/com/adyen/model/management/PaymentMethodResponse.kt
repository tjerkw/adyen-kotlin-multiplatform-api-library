/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.management

import com.adyen.model.management.PaginationLinks
import com.adyen.model.management.PaymentMethod

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param itemsTotal Total number of items.
 * @param pagesTotal Total number of pages.
 * @param links 
 * @param `data` The list of supported payment methods and their details.
 * @param typesWithErrors Payment method types with errors.
 */
@Serializable
data class PaymentMethodResponse (

    /* Total number of items. */
    @SerialName(value = "itemsTotal") @Required val itemsTotal: kotlin.Int,

    /* Total number of pages. */
    @SerialName(value = "pagesTotal") @Required val pagesTotal: kotlin.Int,

    @SerialName(value = "_links") val links: PaginationLinks? = null,

    /* The list of supported payment methods and their details. */
    @SerialName(value = "data") val `data`: kotlin.collections.List<PaymentMethod>? = null,

    /* Payment method types with errors. */
    @SerialName(value = "typesWithErrors") val typesWithErrors: kotlin.collections.List<PaymentMethodResponse.TypesWithErrors>? = null

) {

    /**
     * Payment method types with errors.
     *
     * Values: Afterpaytouch,Alipay,AlipayHk,Amex,Applepay,Bcmc,Blik,Cartebancaire,Clearpay,Cup,Diners,DirectdebitGB,Discover,EbankingFI,EftposAustralia,Elo,Elocredit,Elodebit,Girocard,Googlepay,Hiper,Hipercard,Ideal,InteracCard,Jcb,Klarna,KlarnaAccount,KlarnaPaynow,Maestro,Mbway,Mc,Mcdebit,MealVoucherFR,Mobilepay,Multibanco,OnlineBankingPL,Paybybank,Paypal,Payshop,Swish,Trustly,Twint,TwintPos,Vipps,Visa,Visadebit,Vpay,Wechatpay,WechatpayPos
     */
    @Serializable
    enum class TypesWithErrors(val value: kotlin.String) {
        @SerialName(value = "afterpaytouch") Afterpaytouch("afterpaytouch"),
        @SerialName(value = "alipay") Alipay("alipay"),
        @SerialName(value = "alipay_hk") AlipayHk("alipay_hk"),
        @SerialName(value = "amex") Amex("amex"),
        @SerialName(value = "applepay") Applepay("applepay"),
        @SerialName(value = "bcmc") Bcmc("bcmc"),
        @SerialName(value = "blik") Blik("blik"),
        @SerialName(value = "cartebancaire") Cartebancaire("cartebancaire"),
        @SerialName(value = "clearpay") Clearpay("clearpay"),
        @SerialName(value = "cup") Cup("cup"),
        @SerialName(value = "diners") Diners("diners"),
        @SerialName(value = "directdebit_GB") DirectdebitGB("directdebit_GB"),
        @SerialName(value = "discover") Discover("discover"),
        @SerialName(value = "ebanking_FI") EbankingFI("ebanking_FI"),
        @SerialName(value = "eftpos_australia") EftposAustralia("eftpos_australia"),
        @SerialName(value = "elo") Elo("elo"),
        @SerialName(value = "elocredit") Elocredit("elocredit"),
        @SerialName(value = "elodebit") Elodebit("elodebit"),
        @SerialName(value = "girocard") Girocard("girocard"),
        @SerialName(value = "googlepay") Googlepay("googlepay"),
        @SerialName(value = "hiper") Hiper("hiper"),
        @SerialName(value = "hipercard") Hipercard("hipercard"),
        @SerialName(value = "ideal") Ideal("ideal"),
        @SerialName(value = "interac_card") InteracCard("interac_card"),
        @SerialName(value = "jcb") Jcb("jcb"),
        @SerialName(value = "klarna") Klarna("klarna"),
        @SerialName(value = "klarna_account") KlarnaAccount("klarna_account"),
        @SerialName(value = "klarna_paynow") KlarnaPaynow("klarna_paynow"),
        @SerialName(value = "maestro") Maestro("maestro"),
        @SerialName(value = "mbway") Mbway("mbway"),
        @SerialName(value = "mc") Mc("mc"),
        @SerialName(value = "mcdebit") Mcdebit("mcdebit"),
        @SerialName(value = "mealVoucher_FR") MealVoucherFR("mealVoucher_FR"),
        @SerialName(value = "mobilepay") Mobilepay("mobilepay"),
        @SerialName(value = "multibanco") Multibanco("multibanco"),
        @SerialName(value = "onlineBanking_PL") OnlineBankingPL("onlineBanking_PL"),
        @SerialName(value = "paybybank") Paybybank("paybybank"),
        @SerialName(value = "paypal") Paypal("paypal"),
        @SerialName(value = "payshop") Payshop("payshop"),
        @SerialName(value = "swish") Swish("swish"),
        @SerialName(value = "trustly") Trustly("trustly"),
        @SerialName(value = "twint") Twint("twint"),
        @SerialName(value = "twint_pos") TwintPos("twint_pos"),
        @SerialName(value = "vipps") Vipps("vipps"),
        @SerialName(value = "visa") Visa("visa"),
        @SerialName(value = "visadebit") Visadebit("visadebit"),
        @SerialName(value = "vpay") Vpay("vpay"),
        @SerialName(value = "wechatpay") Wechatpay("wechatpay"),
        @SerialName(value = "wechatpay_pos") WechatpayPos("wechatpay_pos");
    }
}

