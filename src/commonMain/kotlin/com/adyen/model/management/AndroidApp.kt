/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.management


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param id The unique identifier of the app.
 * @param status The status of the app. Possible values:  * `processing`: the app is being signed and converted to a format that the terminal can handle. * `error`: something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * `invalid`: there is something wrong with the APK file of the app. * `ready`: the app has been signed and converted. * `archived`: the app is no longer available.
 * @param description The description that was provided when uploading the app. The description is not shown on the terminal.
 * @param errorCode The error code of the app. It exists if the status is error or invalid.
 * @param label The app name that is shown on the terminal.
 * @param packageName The package name that uniquely identifies the Android app.
 * @param versionCode The version number of the app.
 * @param versionName The app version number that is shown on the terminal.
 */
@Serializable
data class AndroidApp (

    /* The unique identifier of the app. */
    @SerialName(value = "id") @Required val id: kotlin.String,

    /* The status of the app. Possible values:  * `processing`: the app is being signed and converted to a format that the terminal can handle. * `error`: something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * `invalid`: there is something wrong with the APK file of the app. * `ready`: the app has been signed and converted. * `archived`: the app is no longer available. */
    @SerialName(value = "status") @Required val status: kotlin.String,

    /* The description that was provided when uploading the app. The description is not shown on the terminal. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* The error code of the app. It exists if the status is error or invalid. */
    @SerialName(value = "errorCode") val errorCode: kotlin.String? = null,

    /* The app name that is shown on the terminal. */
    @SerialName(value = "label") val label: kotlin.String? = null,

    /* The package name that uniquely identifies the Android app. */
    @SerialName(value = "packageName") val packageName: kotlin.String? = null,

    /* The version number of the app. */
    @SerialName(value = "versionCode") val versionCode: kotlin.Int? = null,

    /* The app version number that is shown on the terminal. */
    @SerialName(value = "versionName") val versionName: kotlin.String? = null

)

