/**
 * Configuration API
 *
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.balanceplatform

import com.adyen.model.balanceplatform.DeviceInfo

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param brandVariant The card brand variant of the payment instrument associated with the network token. For example, **mc_prepaid_mrw**.
 * @param creationDate Date and time when the network token was created, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) extended format. For example, **2020-12-18T10:15:30+01:00**..
 * @param device 
 * @param id The unique identifier of the network token.
 * @param paymentInstrumentId The unique identifier of the payment instrument to which this network token belongs to.
 * @param status The status of the network token. Possible values: **active**, **inactive**, **suspended**, **closed**.
 * @param tokenLastFour The last four digits of the network token `id`.
 * @param type The type of wallet the network token is associated with. For example, **applePay**.
 */
@Serializable
data class NetworkToken (

    /* The card brand variant of the payment instrument associated with the network token. For example, **mc_prepaid_mrw**. */
    @SerialName(value = "brandVariant") val brandVariant: kotlin.String? = null,

    /* Date and time when the network token was created, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) extended format. For example, **2020-12-18T10:15:30+01:00**.. */
    @SerialName(value = "creationDate") val creationDate: kotlin.String? = null,

    @SerialName(value = "device") val device: DeviceInfo? = null,

    /* The unique identifier of the network token. */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* The unique identifier of the payment instrument to which this network token belongs to. */
    @SerialName(value = "paymentInstrumentId") val paymentInstrumentId: kotlin.String? = null,

    /* The status of the network token. Possible values: **active**, **inactive**, **suspended**, **closed**. */
    @SerialName(value = "status") val status: NetworkToken.Status? = null,

    /* The last four digits of the network token `id`. */
    @SerialName(value = "tokenLastFour") val tokenLastFour: kotlin.String? = null,

    /* The type of wallet the network token is associated with. For example, **applePay**. */
    @SerialName(value = "type") val type: kotlin.String? = null

) {

    /**
     * The status of the network token. Possible values: **active**, **inactive**, **suspended**, **closed**.
     *
     * Values: Active,Inactive,Suspended,Closed
     */
    @Serializable
    enum class Status(val value: kotlin.String) {
        @SerialName(value = "active") Active("active"),
        @SerialName(value = "inactive") Inactive("inactive"),
        @SerialName(value = "suspended") Suspended("suspended"),
        @SerialName(value = "closed") Closed("closed");
    }
}

