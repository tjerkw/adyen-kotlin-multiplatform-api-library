/**
 * Configuration API
 *
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.balanceplatform


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param allowed Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
 * @param allowedLevel The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**.
 * @param enabled Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
 * @param id The ID of the supporting entity.
 * @param requested Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
 * @param requestedLevel The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**.
 * @param verificationStatus The status of the verification checks for the supporting entity capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability. 
 */
@Serializable
data class AccountSupportingEntityCapability (

    /* Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability. */
    @SerialName(value = "allowed") val allowed: kotlin.Boolean? = null,

    /* The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**. */
    @SerialName(value = "allowedLevel") val allowedLevel: AccountSupportingEntityCapability.AllowedLevel? = null,

    /* Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder. */
    @SerialName(value = "enabled") val enabled: kotlin.Boolean? = null,

    /* The ID of the supporting entity. */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field. */
    @SerialName(value = "requested") val requested: kotlin.Boolean? = null,

    /* The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**. */
    @SerialName(value = "requestedLevel") val requestedLevel: AccountSupportingEntityCapability.RequestedLevel? = null,

    /* The status of the verification checks for the supporting entity capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.  */
    @SerialName(value = "verificationStatus") val verificationStatus: AccountSupportingEntityCapability.VerificationStatus? = null

) {

    /**
     * The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**.
     *
     * Values: High,Low,Medium,NotApplicable
     */
    @Serializable
    enum class AllowedLevel(val value: kotlin.String) {
        @SerialName(value = "high") High("high"),
        @SerialName(value = "low") Low("low"),
        @SerialName(value = "medium") Medium("medium"),
        @SerialName(value = "notApplicable") NotApplicable("notApplicable");
    }
    /**
     * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**.
     *
     * Values: High,Low,Medium,NotApplicable
     */
    @Serializable
    enum class RequestedLevel(val value: kotlin.String) {
        @SerialName(value = "high") High("high"),
        @SerialName(value = "low") Low("low"),
        @SerialName(value = "medium") Medium("medium"),
        @SerialName(value = "notApplicable") NotApplicable("notApplicable");
    }
    /**
     * The status of the verification checks for the supporting entity capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability. 
     *
     * Values: Invalid,Pending,Rejected,Valid
     */
    @Serializable
    enum class VerificationStatus(val value: kotlin.String) {
        @SerialName(value = "invalid") Invalid("invalid"),
        @SerialName(value = "pending") Pending("pending"),
        @SerialName(value = "rejected") Rejected("rejected"),
        @SerialName(value = "valid") Valid("valid");
    }
}

