/**
 * Configuration API
 *
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.balanceplatform


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param country The two-character ISO-3166-1 alpha-2 country code. For example, **US**. >If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
 * @param city The name of the city.
 * @param line1 The street name. For example, if the address is \"Rokin 49\", provide \"Rokin\".
 * @param line2 The house number or name. For example, if the address is \"Rokin 49\", provide \"49\".
 * @param line3 Optional information about the address.
 * @param postalCode The postal code. Maximum length: * 5 digits for an address in the US. * 10 characters for an address in all other countries.
 * @param stateOrProvince The two-letterISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada. > Required for the US and Canada.
 */
@Serializable
data class DeliveryAddress (

    /* The two-character ISO-3166-1 alpha-2 country code. For example, **US**. >If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`. */
    @SerialName(value = "country") @Required val country: kotlin.String,

    /* The name of the city. */
    @SerialName(value = "city") val city: kotlin.String? = null,

    /* The street name. For example, if the address is \"Rokin 49\", provide \"Rokin\". */
    @SerialName(value = "line1") val line1: kotlin.String? = null,

    /* The house number or name. For example, if the address is \"Rokin 49\", provide \"49\". */
    @SerialName(value = "line2") val line2: kotlin.String? = null,

    /* Optional information about the address. */
    @SerialName(value = "line3") val line3: kotlin.String? = null,

    /* The postal code. Maximum length: * 5 digits for an address in the US. * 10 characters for an address in all other countries. */
    @SerialName(value = "postalCode") val postalCode: kotlin.String? = null,

    /* The two-letterISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada. > Required for the US and Canada. */
    @SerialName(value = "stateOrProvince") val stateOrProvince: kotlin.String? = null

)

