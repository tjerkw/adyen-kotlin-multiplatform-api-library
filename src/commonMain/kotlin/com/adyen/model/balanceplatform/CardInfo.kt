/**
 * Configuration API
 *
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.balanceplatform

import com.adyen.model.balanceplatform.Authentication
import com.adyen.model.balanceplatform.CardConfiguration
import com.adyen.model.balanceplatform.DeliveryContact

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param brand The brand of the physical or the virtual card. Possible values: **visa**, **mc**.
 * @param brandVariant The brand variant of the physical or the virtual card. For example, **visadebit** or **mcprepaid**. >Reach out to your Adyen contact to get the values relevant for your integration.
 * @param cardholderName The name of the cardholder.  Maximum length: 26 characters.
 * @param formFactor The form factor of the card. Possible values: **virtual**, **physical**.
 * @param authentication 
 * @param configuration 
 * @param deliveryContact 
 * @param threeDSecure Allocates a specific product range for either a physical or a virtual card. Possible values: **fullySupported**, **secureCorporate**. >Reach out to your Adyen contact to get the values relevant for your integration.
 */
@Serializable
data class CardInfo (

    /* The brand of the physical or the virtual card. Possible values: **visa**, **mc**. */
    @SerialName(value = "brand") @Required val brand: kotlin.String,

    /* The brand variant of the physical or the virtual card. For example, **visadebit** or **mcprepaid**. >Reach out to your Adyen contact to get the values relevant for your integration. */
    @SerialName(value = "brandVariant") @Required val brandVariant: kotlin.String,

    /* The name of the cardholder.  Maximum length: 26 characters. */
    @SerialName(value = "cardholderName") @Required val cardholderName: kotlin.String,

    /* The form factor of the card. Possible values: **virtual**, **physical**. */
    @SerialName(value = "formFactor") @Required val formFactor: CardInfo.FormFactor,

    @SerialName(value = "authentication") val authentication: Authentication? = null,

    @SerialName(value = "configuration") val configuration: CardConfiguration? = null,

    @SerialName(value = "deliveryContact") val deliveryContact: DeliveryContact? = null,

    /* Allocates a specific product range for either a physical or a virtual card. Possible values: **fullySupported**, **secureCorporate**. >Reach out to your Adyen contact to get the values relevant for your integration. */
    @SerialName(value = "threeDSecure") val threeDSecure: kotlin.String? = null

) {

    /**
     * The form factor of the card. Possible values: **virtual**, **physical**.
     *
     * Values: Physical,Unknown,Virtual
     */
    @Serializable
    enum class FormFactor(val value: kotlin.String) {
        @SerialName(value = "physical") Physical("physical"),
        @SerialName(value = "unknown") Unknown("unknown"),
        @SerialName(value = "virtual") Virtual("virtual");
    }
}

