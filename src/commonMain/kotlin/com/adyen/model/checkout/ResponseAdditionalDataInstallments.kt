/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param installmentPaymentDataInstallmentType Type of installment. The value of `installmentType` should be **IssuerFinanced**.
 * @param installmentPaymentDataOptionItemNrAnnualPercentageRate Annual interest rate.
 * @param installmentPaymentDataOptionItemNrFirstInstallmentAmount First Installment Amount in minor units.
 * @param installmentPaymentDataOptionItemNrInstallmentFee Installment fee amount in minor units.
 * @param installmentPaymentDataOptionItemNrInterestRate Interest rate for the installment period.
 * @param installmentPaymentDataOptionItemNrMaximumNumberOfInstallments Maximum number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrMinimumNumberOfInstallments Minimum number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrNumberOfInstallments Total number of installments possible for this payment.
 * @param installmentPaymentDataOptionItemNrSubsequentInstallmentAmount Subsequent Installment Amount in minor units.
 * @param installmentPaymentDataOptionItemNrTotalAmountDue Total amount in minor units.
 * @param installmentPaymentDataPaymentOptions Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments
 * @param installmentsValue The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments.
 */
@Serializable
data class ResponseAdditionalDataInstallments (

    /* Type of installment. The value of `installmentType` should be **IssuerFinanced**. */
    @SerialName(value = "installmentPaymentData.installmentType") val installmentPaymentDataInstallmentType: kotlin.String? = null,

    /* Annual interest rate. */
    @SerialName(value = "installmentPaymentData.option[itemNr].annualPercentageRate") val installmentPaymentDataOptionItemNrAnnualPercentageRate: kotlin.String? = null,

    /* First Installment Amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].firstInstallmentAmount") val installmentPaymentDataOptionItemNrFirstInstallmentAmount: kotlin.String? = null,

    /* Installment fee amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].installmentFee") val installmentPaymentDataOptionItemNrInstallmentFee: kotlin.String? = null,

    /* Interest rate for the installment period. */
    @SerialName(value = "installmentPaymentData.option[itemNr].interestRate") val installmentPaymentDataOptionItemNrInterestRate: kotlin.String? = null,

    /* Maximum number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].maximumNumberOfInstallments") val installmentPaymentDataOptionItemNrMaximumNumberOfInstallments: kotlin.String? = null,

    /* Minimum number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].minimumNumberOfInstallments") val installmentPaymentDataOptionItemNrMinimumNumberOfInstallments: kotlin.String? = null,

    /* Total number of installments possible for this payment. */
    @SerialName(value = "installmentPaymentData.option[itemNr].numberOfInstallments") val installmentPaymentDataOptionItemNrNumberOfInstallments: kotlin.String? = null,

    /* Subsequent Installment Amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].subsequentInstallmentAmount") val installmentPaymentDataOptionItemNrSubsequentInstallmentAmount: kotlin.String? = null,

    /* Total amount in minor units. */
    @SerialName(value = "installmentPaymentData.option[itemNr].totalAmountDue") val installmentPaymentDataOptionItemNrTotalAmountDue: kotlin.String? = null,

    /* Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments */
    @SerialName(value = "installmentPaymentData.paymentOptions") val installmentPaymentDataPaymentOptions: kotlin.String? = null,

    /* The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments. */
    @SerialName(value = "installments.value") val installmentsValue: kotlin.String? = null

)

