/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout

import com.adyen.model.checkout.InputDetail
import com.adyen.model.checkout.PaymentMethodGroup
import com.adyen.model.checkout.PaymentMethodIssuer
import com.adyen.model.checkout.StoredDetails

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param brand Brand for the selected gift card. For example: plastix, hmclub.
 * @param brands List of possible brands. For example: visa, mc.
 * @param configuration The configuration of the payment method.
 * @param fundingSource The funding source of the payment method.
 * @param group 
 * @param inputDetails All input details to be provided to complete the payment with this payment method.
 * @param issuers A list of issuers for this payment method.
 * @param name The displayable name of this payment method.
 * @param recurringDetailReference The reference that uniquely identifies the recurring detail.
 * @param storedDetails 
 * @param type The unique payment method code.
 */
@Serializable
data class RecurringDetail (

    /* Brand for the selected gift card. For example: plastix, hmclub. */
    @SerialName(value = "brand") val brand: kotlin.String? = null,

    /* List of possible brands. For example: visa, mc. */
    @SerialName(value = "brands") val brands: kotlin.collections.List<kotlin.String>? = null,

    /* The configuration of the payment method. */
    @SerialName(value = "configuration") val configuration: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    /* The funding source of the payment method. */
    @SerialName(value = "fundingSource") val fundingSource: RecurringDetail.FundingSource? = null,

    @SerialName(value = "group") val group: PaymentMethodGroup? = null,

    /* All input details to be provided to complete the payment with this payment method. */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "inputDetails") val inputDetails: kotlin.collections.List<InputDetail>? = null,

    /* A list of issuers for this payment method. */
    @SerialName(value = "issuers") val issuers: kotlin.collections.List<PaymentMethodIssuer>? = null,

    /* The displayable name of this payment method. */
    @SerialName(value = "name") val name: kotlin.String? = null,

    /* The reference that uniquely identifies the recurring detail. */
    @SerialName(value = "recurringDetailReference") val recurringDetailReference: kotlin.String? = null,

    @SerialName(value = "storedDetails") val storedDetails: StoredDetails? = null,

    /* The unique payment method code. */
    @SerialName(value = "type") val type: kotlin.String? = null

) {

    /**
     * The funding source of the payment method.
     *
     * Values: Credit,Debit
     */
    @Serializable
    enum class FundingSource(val value: kotlin.String) {
        @SerialName(value = "credit") Credit("credit"),
        @SerialName(value = "debit") Debit("debit");
    }
}

