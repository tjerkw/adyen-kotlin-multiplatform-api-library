/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param acceptHeader The accept header value of the shopper's browser.
 * @param colorDepth The color depth of the shopper's browser in bits per pixel. This should be obtained by using the browser's `screen.colorDepth` property. Accepted values: 1, 4, 8, 15, 16, 24, 30, 32 or 48 bit color depth.
 * @param javaEnabled Boolean value indicating if the shopper's browser is able to execute Java.
 * @param language The `navigator.language` value of the shopper's browser (as defined in IETF BCP 47).
 * @param screenHeight The total height of the shopper's device screen in pixels.
 * @param screenWidth The total width of the shopper's device screen in pixels.
 * @param timeZoneOffset Time difference between UTC time and the shopper's browser local time, in minutes.
 * @param userAgent The user agent value of the shopper's browser.
 * @param javaScriptEnabled Boolean value indicating if the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present.
 */
@Serializable
data class BrowserInfo (

    /* The accept header value of the shopper's browser. */
    @SerialName(value = "acceptHeader") @Required val acceptHeader: kotlin.String,

    /* The color depth of the shopper's browser in bits per pixel. This should be obtained by using the browser's `screen.colorDepth` property. Accepted values: 1, 4, 8, 15, 16, 24, 30, 32 or 48 bit color depth. */
    @SerialName(value = "colorDepth") @Required val colorDepth: kotlin.Int,

    /* Boolean value indicating if the shopper's browser is able to execute Java. */
    @SerialName(value = "javaEnabled") @Required val javaEnabled: kotlin.Boolean,

    /* The `navigator.language` value of the shopper's browser (as defined in IETF BCP 47). */
    @SerialName(value = "language") @Required val language: kotlin.String,

    /* The total height of the shopper's device screen in pixels. */
    @SerialName(value = "screenHeight") @Required val screenHeight: kotlin.Int,

    /* The total width of the shopper's device screen in pixels. */
    @SerialName(value = "screenWidth") @Required val screenWidth: kotlin.Int,

    /* Time difference between UTC time and the shopper's browser local time, in minutes. */
    @SerialName(value = "timeZoneOffset") @Required val timeZoneOffset: kotlin.Int,

    /* The user agent value of the shopper's browser. */
    @SerialName(value = "userAgent") @Required val userAgent: kotlin.String,

    /* Boolean value indicating if the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present. */
    @SerialName(value = "javaScriptEnabled") val javaScriptEnabled: kotlin.Boolean? = true

)

