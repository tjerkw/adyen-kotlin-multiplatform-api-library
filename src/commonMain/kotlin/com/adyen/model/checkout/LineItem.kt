/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param amountExcludingTax Item amount excluding the tax, in minor units.
 * @param amountIncludingTax Item amount including the tax, in minor units.
 * @param brand Brand of the item.
 * @param color Color of the item.
 * @param description Description of the line item.
 * @param id ID of the line item.
 * @param imageUrl Link to the picture of the purchased item.
 * @param itemCategory Item category, used by the payment methods PayPal and Ratepay.
 * @param manufacturer Manufacturer of the item.
 * @param productUrl Link to the purchased item.
 * @param quantity Number of items.
 * @param receiverEmail Email associated with the given product in the basket (usually in electronic gift cards).
 * @param propertySize Size of the item.
 * @param sku Stock keeping unit.
 * @param taxAmount Tax amount, in minor units.
 * @param taxPercentage Tax percentage, in minor units.
 * @param upc Universal Product Code.
 */
@Serializable
data class LineItem (

    /* Item amount excluding the tax, in minor units. */
    @SerialName(value = "amountExcludingTax") val amountExcludingTax: kotlin.Long? = null,

    /* Item amount including the tax, in minor units. */
    @SerialName(value = "amountIncludingTax") val amountIncludingTax: kotlin.Long? = null,

    /* Brand of the item. */
    @SerialName(value = "brand") val brand: kotlin.String? = null,

    /* Color of the item. */
    @SerialName(value = "color") val color: kotlin.String? = null,

    /* Description of the line item. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* ID of the line item. */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* Link to the picture of the purchased item. */
    @SerialName(value = "imageUrl") val imageUrl: kotlin.String? = null,

    /* Item category, used by the payment methods PayPal and Ratepay. */
    @SerialName(value = "itemCategory") val itemCategory: kotlin.String? = null,

    /* Manufacturer of the item. */
    @SerialName(value = "manufacturer") val manufacturer: kotlin.String? = null,

    /* Link to the purchased item. */
    @SerialName(value = "productUrl") val productUrl: kotlin.String? = null,

    /* Number of items. */
    @SerialName(value = "quantity") val quantity: kotlin.Long? = null,

    /* Email associated with the given product in the basket (usually in electronic gift cards). */
    @SerialName(value = "receiverEmail") val receiverEmail: kotlin.String? = null,

    /* Size of the item. */
    @SerialName(value = "size") val propertySize: kotlin.String? = null,

    /* Stock keeping unit. */
    @SerialName(value = "sku") val sku: kotlin.String? = null,

    /* Tax amount, in minor units. */
    @SerialName(value = "taxAmount") val taxAmount: kotlin.Long? = null,

    /* Tax percentage, in minor units. */
    @SerialName(value = "taxPercentage") val taxPercentage: kotlin.Long? = null,

    /* Universal Product Code. */
    @SerialName(value = "upc") val upc: kotlin.String? = null

)

