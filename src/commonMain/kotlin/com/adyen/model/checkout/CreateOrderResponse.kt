/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout

import com.adyen.model.checkout.Amount
import com.adyen.model.checkout.FraudResult

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param amount 
 * @param expiresAt The date that the order will expire.
 * @param orderData The encrypted data that will be used by merchant for adding payments to the order.
 * @param remainingAmount 
 * @param resultCode The result of the order creation request.  The value is always **Success**.
 * @param additionalData Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**.
 * @param fraudResult 
 * @param pspReference Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
 * @param reference The reference provided by merchant for creating the order.
 * @param refusalReason If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.  For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
 */
@Serializable
data class CreateOrderResponse (

    @SerialName(value = "amount") @Required val amount: Amount,

    /* The date that the order will expire. */
    @SerialName(value = "expiresAt") @Required val expiresAt: kotlin.String,

    /* The encrypted data that will be used by merchant for adding payments to the order. */
    @SerialName(value = "orderData") @Required val orderData: kotlin.String,

    @SerialName(value = "remainingAmount") @Required val remainingAmount: Amount,

    /* The result of the order creation request.  The value is always **Success**. */
    @SerialName(value = "resultCode") @Required val resultCode: CreateOrderResponse.ResultCode,

    /* Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**. */
    @SerialName(value = "additionalData") val additionalData: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    @SerialName(value = "fraudResult") val fraudResult: FraudResult? = null,

    /* Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request. */
    @SerialName(value = "pspReference") val pspReference: kotlin.String? = null,

    /* The reference provided by merchant for creating the order. */
    @SerialName(value = "reference") val reference: kotlin.String? = null,

    /* If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.  For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons). */
    @SerialName(value = "refusalReason") val refusalReason: kotlin.String? = null

) {

    /**
     * The result of the order creation request.  The value is always **Success**.
     *
     * Values: Success
     */
    @Serializable
    enum class ResultCode(val value: kotlin.String) {
        @SerialName(value = "Success") Success("Success");
    }
}

