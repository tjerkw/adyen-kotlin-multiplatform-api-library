/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param riskdataCustomFieldName The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).
 * @param riskdataBasketItemItemNrAmountPerItem The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
 * @param riskdataBasketItemItemNrBrand Brand of the item.
 * @param riskdataBasketItemItemNrCategory Category of the item.
 * @param riskdataBasketItemItemNrColor Color of the item.
 * @param riskdataBasketItemItemNrCurrency The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
 * @param riskdataBasketItemItemNrItemID ID of the item.
 * @param riskdataBasketItemItemNrManufacturer Manufacturer of the item.
 * @param riskdataBasketItemItemNrProductTitle A text description of the product the invoice line refers to.
 * @param riskdataBasketItemItemNrQuantity Quantity of the item purchased.
 * @param riskdataBasketItemItemNrReceiverEmail Email associated with the given product in the basket (usually in electronic gift cards).
 * @param riskdataBasketItemItemNrSize Size of the item.
 * @param riskdataBasketItemItemNrSku [Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit).
 * @param riskdataBasketItemItemNrUpc [Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code).
 * @param riskdataPromotionsPromotionItemNrPromotionCode Code of the promotion.
 * @param riskdataPromotionsPromotionItemNrPromotionDiscountAmount The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
 * @param riskdataPromotionsPromotionItemNrPromotionDiscountCurrency The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
 * @param riskdataPromotionsPromotionItemNrPromotionDiscountPercentage Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.  e.g. for a promotion discount of 30%, the value of the field should be 30.
 * @param riskdataPromotionsPromotionItemNrPromotionName Name of the promotion.
 * @param riskdataRiskProfileReference Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment).
 * @param riskdataSkipRisk If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score.
 */
@Serializable
data class AdditionalDataRisk (

    /* The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields). */
    @SerialName(value = "riskdata.[customFieldName]") val riskdataCustomFieldName: kotlin.String? = null,

    /* The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes). */
    @SerialName(value = "riskdata.basket.item[itemNr].amountPerItem") val riskdataBasketItemItemNrAmountPerItem: kotlin.String? = null,

    /* Brand of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].brand") val riskdataBasketItemItemNrBrand: kotlin.String? = null,

    /* Category of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].category") val riskdataBasketItemItemNrCategory: kotlin.String? = null,

    /* Color of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].color") val riskdataBasketItemItemNrColor: kotlin.String? = null,

    /* The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217). */
    @SerialName(value = "riskdata.basket.item[itemNr].currency") val riskdataBasketItemItemNrCurrency: kotlin.String? = null,

    /* ID of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].itemID") val riskdataBasketItemItemNrItemID: kotlin.String? = null,

    /* Manufacturer of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].manufacturer") val riskdataBasketItemItemNrManufacturer: kotlin.String? = null,

    /* A text description of the product the invoice line refers to. */
    @SerialName(value = "riskdata.basket.item[itemNr].productTitle") val riskdataBasketItemItemNrProductTitle: kotlin.String? = null,

    /* Quantity of the item purchased. */
    @SerialName(value = "riskdata.basket.item[itemNr].quantity") val riskdataBasketItemItemNrQuantity: kotlin.String? = null,

    /* Email associated with the given product in the basket (usually in electronic gift cards). */
    @SerialName(value = "riskdata.basket.item[itemNr].receiverEmail") val riskdataBasketItemItemNrReceiverEmail: kotlin.String? = null,

    /* Size of the item. */
    @SerialName(value = "riskdata.basket.item[itemNr].size") val riskdataBasketItemItemNrSize: kotlin.String? = null,

    /* [Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit). */
    @SerialName(value = "riskdata.basket.item[itemNr].sku") val riskdataBasketItemItemNrSku: kotlin.String? = null,

    /* [Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code). */
    @SerialName(value = "riskdata.basket.item[itemNr].upc") val riskdataBasketItemItemNrUpc: kotlin.String? = null,

    /* Code of the promotion. */
    @SerialName(value = "riskdata.promotions.promotion[itemNr].promotionCode") val riskdataPromotionsPromotionItemNrPromotionCode: kotlin.String? = null,

    /* The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes). */
    @SerialName(value = "riskdata.promotions.promotion[itemNr].promotionDiscountAmount") val riskdataPromotionsPromotionItemNrPromotionDiscountAmount: kotlin.String? = null,

    /* The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217). */
    @SerialName(value = "riskdata.promotions.promotion[itemNr].promotionDiscountCurrency") val riskdataPromotionsPromotionItemNrPromotionDiscountCurrency: kotlin.String? = null,

    /* Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.  e.g. for a promotion discount of 30%, the value of the field should be 30. */
    @SerialName(value = "riskdata.promotions.promotion[itemNr].promotionDiscountPercentage") val riskdataPromotionsPromotionItemNrPromotionDiscountPercentage: kotlin.String? = null,

    /* Name of the promotion. */
    @SerialName(value = "riskdata.promotions.promotion[itemNr].promotionName") val riskdataPromotionsPromotionItemNrPromotionName: kotlin.String? = null,

    /* Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment). */
    @SerialName(value = "riskdata.riskProfileReference") val riskdataRiskProfileReference: kotlin.String? = null,

    /* If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score. */
    @SerialName(value = "riskdata.skipRisk") val riskdataSkipRisk: kotlin.String? = null

)

