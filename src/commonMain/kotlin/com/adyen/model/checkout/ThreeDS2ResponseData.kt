/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param acsChallengeMandated 
 * @param acsOperatorID 
 * @param acsReferenceNumber 
 * @param acsSignedContent 
 * @param acsTransID 
 * @param acsURL 
 * @param authenticationType 
 * @param cardHolderInfo 
 * @param cavvAlgorithm 
 * @param challengeIndicator 
 * @param dsReferenceNumber 
 * @param dsTransID 
 * @param exemptionIndicator 
 * @param messageVersion 
 * @param riskScore 
 * @param sdkEphemPubKey 
 * @param threeDSServerTransID 
 * @param transStatus 
 * @param transStatusReason 
 */
@Serializable
data class ThreeDS2ResponseData (

    @SerialName(value = "acsChallengeMandated") val acsChallengeMandated: kotlin.String? = null,

    @SerialName(value = "acsOperatorID") val acsOperatorID: kotlin.String? = null,

    @SerialName(value = "acsReferenceNumber") val acsReferenceNumber: kotlin.String? = null,

    @SerialName(value = "acsSignedContent") val acsSignedContent: kotlin.String? = null,

    @SerialName(value = "acsTransID") val acsTransID: kotlin.String? = null,

    @SerialName(value = "acsURL") val acsURL: kotlin.String? = null,

    @SerialName(value = "authenticationType") val authenticationType: kotlin.String? = null,

    @SerialName(value = "cardHolderInfo") val cardHolderInfo: kotlin.String? = null,

    @SerialName(value = "cavvAlgorithm") val cavvAlgorithm: kotlin.String? = null,

    @SerialName(value = "challengeIndicator") val challengeIndicator: kotlin.String? = null,

    @SerialName(value = "dsReferenceNumber") val dsReferenceNumber: kotlin.String? = null,

    @SerialName(value = "dsTransID") val dsTransID: kotlin.String? = null,

    @SerialName(value = "exemptionIndicator") val exemptionIndicator: kotlin.String? = null,

    @SerialName(value = "messageVersion") val messageVersion: kotlin.String? = null,

    @SerialName(value = "riskScore") val riskScore: kotlin.String? = null,

    @SerialName(value = "sdkEphemPubKey") val sdkEphemPubKey: kotlin.String? = null,

    @SerialName(value = "threeDSServerTransID") val threeDSServerTransID: kotlin.String? = null,

    @SerialName(value = "transStatus") val transStatus: kotlin.String? = null,

    @SerialName(value = "transStatusReason") val transStatusReason: kotlin.String? = null

)

