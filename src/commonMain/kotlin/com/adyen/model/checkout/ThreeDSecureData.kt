/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.adyen.model.checkout


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param authenticationResponse In 3D Secure 1, the authentication response if the shopper was redirected.  In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter.
 * @param cavv The cardholder authentication value (base64 encoded, 20 bytes in a decoded form).
 * @param cavvAlgorithm The CAVV algorithm used. Include this only for 3D Secure 1.
 * @param challengeCancel Indicator informing the Access Control Server (ACS) and the Directory Server (DS) that the authentication has been cancelled. For possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata).
 * @param directoryResponse In 3D Secure 1, this is the enrollment response from the 3D directory server.  In 3D Secure 2, this is the `transStatus` from the `ARes`.
 * @param dsTransID Supported for 3D Secure 2. The unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction.
 * @param eci The electronic commerce indicator.
 * @param riskScore Risk score calculated by Directory Server (DS). Required for Cartes Bancaires integrations.
 * @param threeDSVersion The version of the 3D Secure protocol.
 * @param tokenAuthenticationVerificationValue Network token authentication verification value (TAVV). The network token cryptogram.
 * @param transStatusReason Provides information on why the `transStatus` field has the specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values).
 * @param xid Supported for 3D Secure 1. The transaction identifier (Base64-encoded, 20 bytes in a decoded form).
 */
@Serializable
data class ThreeDSecureData (

    /* In 3D Secure 1, the authentication response if the shopper was redirected.  In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter. */
    @SerialName(value = "authenticationResponse") val authenticationResponse: ThreeDSecureData.AuthenticationResponse? = null,

    /* The cardholder authentication value (base64 encoded, 20 bytes in a decoded form). */
    @SerialName(value = "cavv") val cavv: com.adyen.client.infrastructure.Base64ByteArray? = null,

    /* The CAVV algorithm used. Include this only for 3D Secure 1. */
    @SerialName(value = "cavvAlgorithm") val cavvAlgorithm: kotlin.String? = null,

    /* Indicator informing the Access Control Server (ACS) and the Directory Server (DS) that the authentication has been cancelled. For possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata). */
    @SerialName(value = "challengeCancel") val challengeCancel: ThreeDSecureData.ChallengeCancel? = null,

    /* In 3D Secure 1, this is the enrollment response from the 3D directory server.  In 3D Secure 2, this is the `transStatus` from the `ARes`. */
    @SerialName(value = "directoryResponse") val directoryResponse: ThreeDSecureData.DirectoryResponse? = null,

    /* Supported for 3D Secure 2. The unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. */
    @SerialName(value = "dsTransID") val dsTransID: kotlin.String? = null,

    /* The electronic commerce indicator. */
    @SerialName(value = "eci") val eci: kotlin.String? = null,

    /* Risk score calculated by Directory Server (DS). Required for Cartes Bancaires integrations. */
    @SerialName(value = "riskScore") val riskScore: kotlin.String? = null,

    /* The version of the 3D Secure protocol. */
    @SerialName(value = "threeDSVersion") val threeDSVersion: kotlin.String? = null,

    /* Network token authentication verification value (TAVV). The network token cryptogram. */
    @SerialName(value = "tokenAuthenticationVerificationValue") val tokenAuthenticationVerificationValue: com.adyen.client.infrastructure.Base64ByteArray? = null,

    /* Provides information on why the `transStatus` field has the specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values). */
    @SerialName(value = "transStatusReason") val transStatusReason: kotlin.String? = null,

    /* Supported for 3D Secure 1. The transaction identifier (Base64-encoded, 20 bytes in a decoded form). */
    @SerialName(value = "xid") val xid: com.adyen.client.infrastructure.Base64ByteArray? = null

) {

    /**
     * In 3D Secure 1, the authentication response if the shopper was redirected.  In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter.
     *
     * Values: Y,N,U,A
     */
    @Serializable
    enum class AuthenticationResponse(val value: kotlin.String) {
        @SerialName(value = "Y") Y("Y"),
        @SerialName(value = "N") N("N"),
        @SerialName(value = "U") U("U"),
        @SerialName(value = "A") A("A");
    }
    /**
     * Indicator informing the Access Control Server (ACS) and the Directory Server (DS) that the authentication has been cancelled. For possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata).
     *
     * Values: _01,_02,_03,_04,_05,_06,_07
     */
    @Serializable
    enum class ChallengeCancel(val value: kotlin.String) {
        @SerialName(value = "01") _01("01"),
        @SerialName(value = "02") _02("02"),
        @SerialName(value = "03") _03("03"),
        @SerialName(value = "04") _04("04"),
        @SerialName(value = "05") _05("05"),
        @SerialName(value = "06") _06("06"),
        @SerialName(value = "07") _07("07");
    }
    /**
     * In 3D Secure 1, this is the enrollment response from the 3D directory server.  In 3D Secure 2, this is the `transStatus` from the `ARes`.
     *
     * Values: A,C,D,I,N,R,U,Y
     */
    @Serializable
    enum class DirectoryResponse(val value: kotlin.String) {
        @SerialName(value = "A") A("A"),
        @SerialName(value = "C") C("C"),
        @SerialName(value = "D") D("D"),
        @SerialName(value = "I") I("I"),
        @SerialName(value = "N") N("N"),
        @SerialName(value = "R") R("R"),
        @SerialName(value = "U") U("U"),
        @SerialName(value = "Y") Y("Y");
    }
}

